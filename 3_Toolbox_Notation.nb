(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    268377,       6436]
NotebookOptionsPosition[    222636,       5386]
NotebookOutlinePosition[    260863,       6182]
CellTagsIndexPosition[    260820,       6179]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"<<", "Toolbox`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Toolbox`Style`"}]}], "Input",
 CellChangeTimes->{{3.579789899530657*^9, 3.579789899867805*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Notation",
 FontSlant->"Italic"]], "Title",
 CellChangeTimes->{{3.579789886229491*^9, 3.5797898879381123`*^9}, 
   3.579789942569796*^9}],

Cell[CellGroupData[{

Cell["Metabolites", "Section",
 CellChangeTimes->{{3.523194159964841*^9, 3.523194161220331*^9}}],

Cell["Metabolites are defined in the following way:", "Text",
 CellChangeTimes->{{3.523194214935094*^9, 3.523194218069714*^9}, {
  3.523194439345724*^9, 3.5231944506422453`*^9}, {3.5255408597256203`*^9, 
  3.5255408600453377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolite", "[", 
  RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.523194189416379*^9, 3.523194196918943*^9}, {
  3.5231944132267303`*^9, 3.52319442230694*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["c",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "c"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792746361833*^9}]
}, Open  ]],

Cell["or using the following shorthand form", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "[", 
  RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.525540847012527*^9, 3.525540851783349*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["c",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "c"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792747010523*^9}]
}, Open  ]],

Cell[TextData[{
 "Metabolite ",
 Cell[BoxData[
  TagBox[
   SuperscriptBox["atp", "c"],
   "metabolite",
   Editable->False,
   Selectable->False]],
  CellChangeTimes->{
   3.5231941984965973`*^9, 3.523194312122793*^9, {3.523194414995949*^9, 
    3.523194423184206*^9}}],
 " represents the compound \[OpenCurlyQuote]atp\[CloseCurlyQuote] in \
compartment \[OpenCurlyQuote]c\[CloseCurlyQuote]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolite", "[", 
  RowBox[{"\"\<atp\>\"", ",", "_"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["_",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", 
   Blank[]],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792747662917*^9}]
}, Open  ]],

Cell["\<\
represents the compound \[OpenCurlyQuote]atp\[CloseCurlyQuote] in any \
compartment (using the underscore pattern _).\
\>", "Text"],

Cell["\<\
Furthermore, external metabolites, whose concentrations are assumed to be \
constant (e.g. in sink or source reactions),  can be specified in the \
following way:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolite", "[", 
  RowBox[{"\"\<atp\>\"", ",", "\"\<Xt\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.5237938406045713`*^9, 3.523793847846176*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["Xt",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "Xt"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792748527585*^9}]
}, Open  ]],

Cell["\<\
Compartment specifications are optional and can be omitted if no explicit \
modeling of compartments is necessary:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolite", "[", "\"\<atp\>\"", "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  StyleBox["atp",
   StripOnInput->False,
   ShowSyntaxStyles->False,
   AutoSpacing->False,
   ZeroWidthTimes->True,
   LineColor->RGBColor[0, 0, 0],
   FrontFaceColor->RGBColor[0, 0, 0],
   BackFaceColor->RGBColor[0, 0, 0],
   GraphicsColor->RGBColor[0, 0, 0],
   FontColor->RGBColor[0, 0, 0]],
  Toolbox`metabolite["atp", None],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792749159637*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Furthermore, metabolites can be defined using the function ", 
  "KeyEvent"],
 ButtonBox["str2mass",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/str2mass"],
 StyleBox[" and the following convention: \[OpenCurlyDoubleQuote]", 
  "KeyEvent"],
 StyleBox["metaboliteID_compartment\[CloseCurlyDoubleQuote]", "KeyEvent",
  FontSlant->"Italic"],
 StyleBox[" (or ", "KeyEvent"],
 StyleBox["\[OpenCurlyDoubleQuote]metaboliteID[compartment]\
\[CloseCurlyDoubleQuote]", "KeyEvent",
  FontSlant->"Italic"],
 StyleBox[")", "KeyEvent"],
 StyleBox[".", "KeyEvent",
  FontSlant->"Italic"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"str2mass", "[", "\"\<atp_c\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"str2mass", "[", "\"\<atp[c]\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"str2mass", "[", "\"\<atp_any\>\"", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["c",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "c"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792750178199*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["c",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "c"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792750180406*^9}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["any",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "any"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792750182147*^9}]
}, Open  ]],

Cell[TextData[{
 "It is very important to make clear that although metabolites (and many of \
the following data types) are displayed in a human readable format (e.g ",
 Cell[BoxData[
  TagBox[
   SuperscriptBox["atp", "c"],
   "metabolite",
   Editable->False,
   Selectable->False]],
  CellChangeTimes->{3.523196496492334*^9, 3.52319659886547*^9}],
 "), the internal representation is still exactly in the metabolite[id, \
compartment] form,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  InterpretationBox[
   SuperscriptBox[
    StyleBox["atp",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]], 
    StyleBox["c",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`metabolite["atp", "c"],
   Editable->False,
   Selectable->False], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"metabolite", "[", 
    RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.57979275314539*^9}]
}, Open  ]],

Cell[TextData[{
 "and in this respect very similar to other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " definitions, e.g.,"
}], "Text",
 CellChangeTimes->{{3.523196961688572*^9, 3.523196961807272*^9}, {
  3.523196992911762*^9, 3.523197027872764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "m"], 
   FractionBox["1", 
    RowBox[{"f", "[", "n", "]"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.5231970335192947`*^9, 3.5231970662618732`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"f", "[", "n", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"n", ",", "0", ",", "m"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.579792754059814*^9}]
}, Open  ]],

Cell["\<\
It is possible to use \[OpenCurlyDoubleQuote]Menu \[RightArrow] Evaluation \
\[RightArrow] Evaluate in place\[OpenCurlyDoubleQuote] in the menu (or Cmd + \
Shift + Enter or the mouse context menu) for inplace replacements\
\>", "Text",
 CellChangeTimes->{{3.5797928886858177`*^9, 3.579792896678331*^9}, {
  3.579799990495726*^9, 3.579799991127728*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXt0E1eaLyqT5P591u0/Zs0/s9ZZ02tNz5qxOumzZt05fe4MqJN09z2T
RJ2kZ04TlIROgwkJDzsQgiHQYENokQCReQnzkHkYA8KAwOAYsA3GIbJBNgi3
ZcAmtkE22EGOJdslq2Tp7kc9dpWqSiXL+AH7typErtqPr3bt3/6+vWvX9/33
Dxa/9cFzBoPhcobB8P+B/+DvOAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
BQUFBQUFBcVkQllTKkfVxf96e+Wa0vqs2Us+LQ2mlnfMi9WfS3dKCoqnBlqM
qLtoNED87cyz+IyzJA/8+eZ62383GH6944FGXletJ+8vB3a7I3pIqr/Y0eVS
TLlu9r+imzP8157eRGrHKCjGHeNI7bN/Cxix+vC6kgfCmf9m+Js1tT6TwWCy
aVLbuTUrK2u5M6SLp7qLHWUupZSHz1xZabP/C0/2M7di4FDECAXFE8OTY/q/
/MNP//bv/ua//eRv/vYf/vVn//BToMV+vfoGQe2frqkjOHLDl7XAtrcpvG65
dU1FGJ0MbFz7+fwPsxAWLP36O3Cy5EzlqtWfwb9X2zdsPbDeccvVFD9x5sBH
Hy2Y/9GCBYsXgEvzF6/7ujqiXqyOQylXifPI4gXzQfnzFixZ8FHWgr98p1l+
8M2fGH69/T4g9anG4WPu/kAg0CtFTwIeUVCkgcQeJetyoBP29/cPDw+nyXFs
cv/s/0HW6d8Z/xb+u2Q/Qe2Vtdr8ur30o/kfLd288cDpZZCyi7dej+9YvyBL
gs0lgNrlR+bjvz76LGfpYvRrzT6dLNZ3uMqP4BoWr96cgwj+0doatcRITfe8
hqh9wjN0+Epvs394aHjMzSIKitQAumAkEgEcHxoaSkeJW7MAuf91XdXFnxkM
r+15sG7mTw0/WXJYP7WbAl9/vXnh4sUfLcBsXfy1G54/4NgM/li2+/aJ6wHn
dU477/rLEqCuN6EE65dC6uWV67PY9R1b10IZlu5uw4LlLV2w8CuPOq85ar9S
8D3g9V8fMNER0KpxymyKyQCWZQG7Sd2dKrutWUBfm9ZVQGr/V0l4K2D63y1x
6qZ2yQErtK6Xbt1UUrlqKVDWi3fcgOedaK698iQi9Y2ICyXesX6xlNrzN1zQ
XGe78WDNl4dX2i7uv5ECtZcdeMhnB6OKBq9jZ7yP/uMnhl9taj559QEbjWFq
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
ux34DaUIzwE0fx6QDipoN9Ye27p15/bt230+3+bNmzdt2rR5x45ly9xc51SQ
TUCEezWSbkF0od2N2lxn67mubni/eq+srMrxemOrTU+F0yNpUCuxPq1mVIeu
2FHnrJW3uwahA22Hnvy3ZuJ6hCQvtFvud4A/bQ96dbOnQi5oA52e6nDIC1eY
7REEujSaa3uimHeS2P4IRB8PK2tlokAvRgr7AZ7AfNju8fm83oAWjgizpHak
AbTaNlcYZUbjTCg1UB1U0AaeZ/uDB62trWwNra6u7uTJk0KXhpiSid8tMXB3
q/Gj+Mhqk1ngMc+CoN3DypR7GQWECsYabA+HDqQd+LvrQeWaJnrUJC+0p0yr
mGJf7/TpW+2Y3wlXWjyV4VAAvztyesMyBJYbub0uj7sU4gdBLOJBhtTmLCvF
DnRZYmDKpj1Oj95cWw4DzwF5Dc4yl9sbRGmSLmiTHYFwyFMCP/mi0kB1UEG7
4SQ8+fjLN/9RWjp3zpw5b7/99ltvvfWnP81RunRWgDY0mbzVZt1cUrCtTL7p
Ney05m8M6thCTPWKHrka2ty8Xg3skdFB3Q4KtE3eiVGToc61U6ESNsUtcVjR
myeILDnuZnNdq8MfYRbTVoJAaHOUhZMDXXhIV3oD+nNtfl5tccbwPuBYJbvs
9IZw0gHpkNUso906+sXz/722TkXFoMCK9mmRRolRpVEjyROyUKzTJbfC7Rpx
Z6mLq9JboX6h/jhPEqEspAlre8OlA5uYZPjqHiPeiZ+BDBXaUOR0Sn8FDE20
JZooEQAG3OqKJBKpUduDJ0vwpqhyA9VBC23QMlcrtx+7nsz5Xpvl6YU+MM9t
StfJVXwszFTK8iAITvVnq8xTprwuvcqynEwPk7N1+x7muA+fDkoz8KK3W8aU
EZLhgHYhkvZYFbNaFhrOk/4jp4MutAs/1JlLlPVvakcVatNh6/j5lKCKjJwO
+nUOS9GmFCCjBe1+KRmPRKJAwN+jZ7WHpsMgoV2AZAW7+mgIySm6H6UOpoyc
jBq0n0QZOWiT0qkJf2QG7XHQwZSRERPaBjKy0DbFlJEUE9oGUji0E6aY8piJ
CW0DMa22KU+umNA2EBPapjy5YkLbQExom/LkigltAzGhbcqTKya0DcSEtilP
rpjQNhAT2qY8uWJC20AeF2gP287PYSlmFAo1ZRjEhLaBjDK0s5AHKZlAjyHN
wkjJjX63e39N8xALl5rOrnRtVccN0dNhABu+h0k3U0ZCTGgbyGhCuzV6ZI5t
jEJYj6hEYYS9ztrxFsuvMKHuEAQRaRafN+bXo3FzELfnhNllX9/uMkw/TLqZ
MhJiQttARg3a6fAGjKh5m4J1TQ1Xzh33LH6zqGgCRKKaFX+QUhDvPQnEM6e8
fMkEFMjgqVm7jOz8MOlmykiICW0DGS1od65Gsas+OBAXLssIVQQ+l6E2KNCs
JjpAQZFwVdDW97f5uDltF14S4m3pOeoqaOdw5bNcRNq8ehrdlCkDERPaBjI6
0M7Uf2cxiGyFQ1m5D1WufxNFmrUs2a3QaBceCZeHdlfswDSr9U0UWkinLgLV
xCIlSmaumLYctOUWf9kbxWQyMV4VDrgmVvORfQzy818/EqMkWHp65rwpUwYo
JrQNZHSgjSPXv0U7tlqU+e+EJeVfvTIOAOclHCru3sAi4ZIYc9kUjEhSVDS/
TutqI6hOdJ3IZFInvf8AqebtwXGvcsa05cJsnZ9UNGHZ9v1VVTvgooFl6lUc
JRhHpLXAuACrVv0DAHmsY4uUW89ckW1NGaiY0DaQwqE9FGyjgJiW1eEO/VIk
EjbuAurizSgSLopSQYLAtqLT1k0FRcKdeiV5+wMY7mLaBV3AkGGEmN6xjh0a
z1onpq0w10ZJLrl/A8af8zRYhgWGBd+Fvkk4SlfuQLc5I9sWJtkcUnABmoIG
l+txmEoML7TTyUSisDhfOiKnIuFwNBYHBUipeCz+SEiWBEHQ7mn68Wp9StKD
dkPtqeN7j54cGukQiaH5SfW9/PNfGP2GBoscTCRcLMUH63N4uajM5xbura+v
XbdwCg6VRWLn5o5py6DdEa/xrfrHK3YbCtP9Uq0C7fF0ZV4JwKevZ+7ItoW0
ZFYhZEPkEjRUw0ChliUlDSwnV71uyMRRlqwI7cab4XM3Eq05oK0K0iHIK59+
hX90DZL3LF5mtVjtiO/Ytm4divITGlz0r+ET+KweXpoEdJlU0aGF9p3gb8FP
zy8cEu8QDY/77JwD+uWI8MEIhbF00zXYmu+uPBQAsm/fvt37riS7SADZbfoB
ZMeNGwNw9+62y/rqkmEEz8HlvXOfA+PAiZaCYtq2hlaDJMDr/rbq1NaFL6qg
XauBNtXzpqilXmTbJA1ykKeRlXCJjA+KRSjRy5vLxmKMFgxRWkSfQog13ER3
AxesjwLtuyf/EzT379bezwFtj81S4q1OpiQpUQ3Zfq2uuCSnElG3w2Jzh+NB
GG7AHR4MtKOQbtgNpmCxSnep5/h5v8tZ5k8Wnl+KBSpzzFWHILB9eu5WLJiz
9uiPxGrfv7J9zwUC7YbaZW/9ZZ57J2Mf0nqB+b1D8L3n1tvQzhVvu9aulARt
Rg/80FUjQhuOA19dvN/bex8Hga0nRMikP3XFdvCRcJmgAWTq1c7GNZPHghIW
7b+V1aqH6vrD+ktYgwvuKdBAn2vtCEPYLgt1oMsRkObTU828buDTFsdYqAzK
eW39HwC0a7pYvShMJ/q2URPotkNovBS+qZ/EhqDhfI0bUyGKzvDBErmQqKIQ
7sk+NYCzautr/PiUIEc0DCsX4IzLYFCK9uec1RZ0ld7AZ8t8BNqNkdVz31i5
/1IOq53ylLgIIT8Ou2MnhP9yzFfiDpOIIYVF5xRFgsi2eQbLhpgC2XEUg+GV
rHqu3ej5veWXZdWquTYX9LJP6UzoyQoX9ewAfgx3v1+CZreWhV8fu1lXd/Py
D7s8C3G8rb6HYR7a2MSvupAEPajh2GIYBHbSh8cjt25Fa76tWPd9XWdv78Nd
s56ikXCvnQ141++7BiruiKBIuKCJ5dvvjRsDTX/1XbXGqK6xryw9dGzv2o9n
Icd4WuRhX/vFr0CBkz/eeeHC9x/aod1/1rkDxhVF6Se6L4BR6OhCaOK/2PfD
xcr1xfBeitefrAPltqMg3RfbcSUdSrjhPqrngo0Xr137Yd+m8v3X+khTwJs6
eQ02xN6vPeCmEGKYKUYhxnoVX5t/XDgqkz602SNSCGVlNiiqyuEikqlFk1Km
6iH+aUq7zjNJ8iOJzmDCgbFXrJf/ri6FH+zU3YwMMr944+sBz7VFaJNeh6Bd
6vXhGFsWu5tFyga2GPME2xwuNau/FHFSDmGr1WpzBprikYDPZbM4gEOeTkQr
wWerwwujAlmsTr+UipTZQTq7zWqxlfiAAgES5ACUYvPHlOEhHQ/73EAXW5m7
jGhUyjyBdLW3lNQKqoyQy4mQ12ZBZVutTm8EGKO6C9+v/eiV4klr7/X0+P8H
Z/gl8MIrzt86f2TX0nen/OL5eRynNy/0UoYXWUWzn6VeZOMF/7RxY/g55svO
jfVdGbnzwrSiohk0biyKrlvkrU1hfuGrgc/5ILBfX0nBKqS7FXOVqLWvfl0D
42tfLi8qmlSDg8F31s6BdVn3Q9QgDxb3xAcXp3Gl2ezvVV5rgQmkuuUOEud3
+mcVK0pgINpfrTyPdXvt61qQpP3avgkkn9W99WtUjvVEKpO6BCPwXmjDd9+2
2TF2rG1tBwaWVF/hfJHTsxa31ZW9wk15r6ZokAJZ08IqpNEYqRkaC4kja9U8
IApDFmdQ9Ui40UG/yiyL0sIFkmDM8iSqAs4i9AXFY9cMEEo3ISpyOXr7FFVI
EgJwTsUMzQb1sFh+YbH8uvzsjZrv9ywv/dMvf7fyJwzte+EVMycMFNrQJ68M
VXqcFhrCPl4JPjujEgvnoYrFI0vpGAyYa3XFYEBXKVLpLYFQtIfTciTgplE/
7fCiw3cJzApsXhjVN+oDWYD3n44FIKrLKsHAxNv9VCRQggcNa1llkMQtsrlD
oMZKCGsHjMArx3EFaB6RBDMKZxDCPOy2WctC2cxPe1cuAFNLy4S193t6mq/6
/xWg+h97gGG92xjZtPjtZ8BPv5qXYc2JIMIDmYbdEWJoqPsR7Y5yRmq5W3e7
ob6+PtH6UD8DDZOn9By5K93c3Hr/PstBrne2tYCxOt3Vk9EvJ9tH/ceM0jPV
8T5Y2BPwJwWq6XiIrqdB0Wm+D+LPKGZtuguW8LC1OZnq6OHKgnqoc8BfOlqb
m5PNIBdpK5z+YUdzM7AzKSmjhDyBeTPE42U+tzhOIqRx6OCdcxV26KPp7tG2
DPXrZTpAiCMzHweqlx8hZCXMGbvxHl6THmE0QeVk6QCRQTffTbMpf7hnrRQk
XuSGK36E+dXMZbVXrtxpqN38yZxfwnWhlfcAtFMX4MrJzB0DhbYbL6PJEehi
u8MAOxBGdhdc6gkQ7AfiKmcgjR1yVhqOzYdjaaNpuK06hQYBGf9kC0RTEKEe
FCdIgnXZPToOOSkHAz6NdLa6GmI+8G+JP0YSJYMonpFXkqIoKLgbxgqUI77K
GGr0nopJBNqgTX5vsfxuJXPIG5b9FkObH2176aDZw54LC8RrBG3yoLiOjEvJ
QN9J7E00Peqysmg1WIfi4nb3kNIVIGR5aFMVhRJ6Mtz4jwsUO1RG0Vn9mRsX
etS6qa/3ZFjpDNq0rfBQwOoVTK0S60Qf2kpHp74x5ywzVRWYqYw2by/FwYWr
kiXl1eNHyoIeBmf7lYjNSgbcizLaMbFbSK/4GDJVubv7+XnMIW9c/Z8E2rXe
qWC6dLRxwA65GwNSChNo44iZpd5AwA8kEKgECI8kVLNqNbRRZC4Cbf4zBGK1
i/jfJW7ifbO6NCLmlf0QuraTF71oTYDVloQ+g6UkKskBOjdweqtl0ujtHLTP
Amg/72LQvomh3cMeA21eMbiWCAf6UHNAm/QN5XOGxcriexNbBu4lvV3pzKzS
bg6h1HvLMmj38UG5sKHhDYLMZhRCX80IfUwFbd5u8NqIowTfKiqDo2krAm1a
by8Np8YCGfFtWRC0u7lBDP2oiUvKhW2j5fAZVT4UGwVkrJ72UXIPg7tjbg1d
WSPgmkochESzrDyybmblZSUuu9IDfzWHQbuOQrs9MO9f4a4DbRzr/NBOCXBD
H0orBR9cVk/hBwDtfjgj9lEvvQReLxjawTKA3NJrtRDaJT62oo6jATrQ+l86
6KbxCZ2BzGCg3ccZCMHCMGjL+aDN9akCoa3q+agjckE61Wt4Wa5aDbRpDyOz
OKWb9bAeTJdpsHLEsAp4YmjiRwNVT1fbGlo178GqoU31YbE/RYMrzLXZ+MNa
SshKh7Fc0O5RRiuWUVUl9cjpc2Ur5NqxTImVqH4Yup6YzII1iTN+pUglBCot
msd2bmjf9/0VQHv88VyBLKVIIdCGTjIeBKylMbak5i+xuyODhnbI40JBtFOB
Mjt5jU7qUpXJ5SU+AgrL6/C3Rb1o/h1ktYPpO6xdCpeWVsIhIBFCK4H2HzoU
aN+j0P7dyrM5oc13Pzoj1EBbb87LoCHCRGtWRHdRaxk5+HBxAmn/4N7l0Omd
kLaH9RwVtLt1sJhRXGl+/MpwqomY54027pCiScoId8JDW7B4SqviDs3GSdqW
YiEcoFQ6cE9Nb67NDTN8RvVA2yvcZYaDpAra6hbs45+pCG31BF5tsQVod/MP
ule40efnfaOC9k8PHlxYD7ccLj2T491yHK5cAUvJv8OWNA65tawarVkhL9fq
9Aer/S4U4F79louCSw+SOGwu274Sdtsd2OBKISv2q1FdYI4cDgfcPgHgOJq2
F402sUAp9cNTOGivF/nkcswPF/aDCTB3sFmslQk4cMR9IKPzVga+mPqoGEK7
g0Lb8t+u48d9n6w72dhY++4z3Fy7R+nTOt0yw/f6XtXcmdkrZkkE51wH2vxi
Hd/zVV2XuoEZblVWXLmh/YRf69NAW7vmqwk0zN+kGs0itDNCRpWFFYshwx0/
S6c33qNZuBBnvlwDUqXZwKBM7rnJtjhXUQ2YbEDRjAPM+eGfRY8W2uxpsCYU
H0YvVzw/D9JrIQ7a5AnTdTt+LAJfLf8x59ChisVrgslkpBS+2FkJt6w0HIIr
w8UfaWEdC5RZmFjtATTjleIsmLU9EAGQIpPW0kBMiLVtcQTjIrDlmMtOEltt
zmC8TXGJrX/5svQvLGMlyojRakcRsm2lfrxmF6Rvt4LiLB4ntqAXY9DEV9Kl
MynmRr/YHfAfpy+MxyYHnsQ7HXC5rTKWzdz6bBLR7aUP96S60gff/3f07T/3
1Jx6/z+ewT9xoyp9+UDtJOsUXP9QzXm5lWpuWOB7lM7SDTfBU8YR3thx3bhH
Wf7RXyBXkMIWsKhDLgbp7eG7Jl91hhpH/RvQ+8IqYl1dlVXIyL7yf/jRSrdl
uAL13k5qG1g7eKJKhAzCyp3uSCtikXsY/KRGWGdXHgb/pg4/F6YFG1CFRyY8
AP5eYX7UPX+768KJD/7vv+C++vv3d6a6uu6FtwNXVAvtwQl0YZO5pu4DFTkN
fGJhszqM8a0tHFl8RzgtSyC5ZkNMOpmIx+NJVT6YlkTkZhsJZOV4SHuiPpFU
b1np1duaotp10MvvP+D7BnuLKvQfbp8k3qAh7pNQh66WufenrH7wb/dPP6z9
bG34XrfOLgltKYI8uHfvblNTY3Pz/fYHxN7Q1V1ZnfSnUys+23LnAayUfu4V
7l29OUao2bitNLsxhHyF3ZO6BtXjERqHPhJdBVTNmLtS9YYT9Q1zpQgV0n0o
ebsT/6u2UXDKo5VH63JuWTFm5XjcBb/8Gsz+OCR60NY5+dXHTWELFLGWdIVj
nIWeiQCuks0+80vfSbYDE+1Ae4knSFEX11UDpk8zvJe0FdE9oq2qSnUKYdLX
c8H/+XgLT+ZkKamo4eyRegsmqqX4XFr9eRSkwHsaWEEDqXKQlRoVMcQ7IdLH
7yH/5zrUmYpV41m+y1+tfttWmGQLP9Q5tGOdayDLytSvNm3aVP5V6ewpGE1P
lezEzGSdVyuKiiYZcR9JV6cVFeme+O5kJ8UKleyxshfRODNpRyh65861k4d8
79nHvPDZac4zVJsu/gxIQUxNpoy8ZP95z2tHgwF/oBKI3+cLDwrbhUN7aJri
81AbmYpd9UcnoYORq+mLgawyR9aYFyGBcj2DyJYy6OwkD+083ETJ43CNpWjS
2RZuM7UsS5LE5gm9fT0PHwolmNB+DOWfGNpDl9GF9loeDZhyAbMOSjd2TrC+
c7WzP7r971bbgqtsCJBvf2S3/n17pF/6cYHN+ukBskj4MH56jg1vR5/qKpvN
QzsvN9H1TTMskPLlFmuBLDtXgeRmpU4JJrQfQzGhbSCPENr98tWZlHWw8+pa
zGaAqZYWHSb7f5KnAPyLIOMKf6ZbujIVudObj1TtLp+HXHsC7UK4iS6u+gOo
S83BQqdvmLLpZU0JJrQfQzGhbSCPEtrZLnwxLYClYX6RZYx9I8bQBvuYIuty
CC4O2rf2vGWBDEt0m87p5RTahXATdW6d9RRHiqJqjbRA2fQ9LAFvRWYaZrkD
2kNrk+GQHGtWQy/PSIaprqHLzwjaUjKeyMfbIpI43brT+migDbvITx9YgdO7
FiCRt4OXy/9osRQfAxPhlmMAWfMwvzEHbZSA8CL288toBXETyYfgsWsluyJZ
QrygKgGuvVNoQ76Fvj58MDzc8Yi7OTeVGA5NuIkJ96JJeFnZq7O++CjlZwFt
Oe5CW2isrpBhOh0Sp7Pto7FCroI2KK33zj4LJB7c+bAP2EEF2nLTIeBiv7n7
8uVtM5Q3Ylpo07Kkq3QZTZebqEWNYZTdsiHcqroOO3ZHmFI2VaJzfIG9/kCk
GXKpUGjDft92aT3iXhgCqdSgRfP2Z3jwxpXG70ThtoYpu0XEV+2PTHALPFJo
yyGvN1ogB9oQWJLkRNAGySGMmFh0SJw+3nVvQO+1dUotxIdL8yvkqBs1b3xl
LLCO5RchpZLIQZRCb8qgPLfwECkA2dOJ7gvgI5osFx9tJL376u53LZhLjXET
cX1fq0pHeCOKSfRBvEdACbj9vr5WXEKDjLdBZtiZBKIhZFiQ22o9aLbeq/O2
fxDNo5cod15iVXU3pOiWnbNOUUe0q0gx0hm204/bfC++Gcx/V3kplQbRk1Ty
CKGN9nXbwgW9mBo8SxK8BznqyHE6jIoOiVO2sLm2uI1IzM9vK+IXmoWtRpBW
qMj6+p7DwcPBYOXu9YgnvOhl17FulAu7uISDqLe3bt/72C/+5lo7KZYSGYFv
7RfLEZP/2/tOnqz4+GX8ihxAG6S6G/wEcxOdYtxEeAOZoNODnXOfRiVM85+8
BNJdOlu50vniRNcZ8DtjNzpxJXYrWrNn49qjt9OgP7dfxk64CtrCrWrbh7SO
as+aas9YVpWKXRNYg1g2bFJlcb9cn5bMinrq2oehT5SmcryxO04PzmTozu+c
0icKdwOau8olKkX12kq5QD4WDG0pUArphaxWB94lbrXZwJeyAJjuAY/XhvmL
0rGg0wZ/gtu+3dUSJDIKed2lNqvDX+nDW7pL3PA0dKKSUhjBXdzAHEtBj5NQ
I1mdEdGUa1mSEmE/9LLRMZUyX0h3eEhCQiRIzIQzM7oGNaFTbhIn4JC33T5b
seK98cXTfAHv/0NpXlt6sJFAu3bx9OfZNi0Nn4+yh5Q/f6Xecyy3VVB6Iizj
Js/Z/UMd603tiPvofIqmT52fBt89LW1kfiAiMnqVbBiTznz9N1rS61u3fgH+
2RDpgNX29l7b94XITdTGbZJmCqWOf72wSBDrqu/rsOJayiagBWZJQoOP3EYY
k9T3qr/9WtgVLWzsFvdDqxqRdmFZLboHphQwyprLqmdB9ndnedegj6NJZRDs
U46isLM0dHTJqEUWNrFj7ImVK7xvOXf/iprqtBV5jhnlwK/7jUnPPGP5/97e
dDeZbLp+8M3nUff916kbgrdkWURMKoTOWPnQyWZ0WtPmxhBMVDotJQEAEoRe
ZxL8HoKcCZ5IGoGdHPHwByvRWUxrMAk3awdd0FJWRpNpSZbj8AQWok2Jl1rt
1SK0VSxJyZAbJC6rhItIYS+EvbUsqD4Ejk6iuarhq6KoH3G9IKutR+iUk8Tp
AoD2j8femYD1n7r14Hf/+B348Ms9UXioc9UUyy9mupUJlw7LAj0/rD6OxEtG
c+xYOXec0UnPTvSR7D0ash2pra2lpSXVlREOA2GR0mgIb+0SJoqU5IOQgmQy
Ha31sRgY8+ubWiRV15I6W5Kp1tb7D4TTYvyZFOVOMxk91iDhgBWlC+nJCLeB
L/HdV324SeneKmSrDoZyIBgowxX3LHiS0myWZ7Jipz14vLNnQ9GvaMSjUmRI
6uWTZdSJe/K0VYZNFEi+05UAJr+tbmhM3twHYL0yePvBg1tfwuOLls0/1qns
YBDu3cR0Rv3ovJUNcYmlgRX0ROH2Cn+JxeaqhhazGqIPH98OQ9iQXOmwch0d
33AlOSSWeMMyHEICas5jgSUJnbxWjpSmPWi4wOcx2TCEDoN6ydiUn9BJn8Tp
AlpGO78UYHv8sUbokCcQzcsn399sOLsGfPiPOYs10BYOIrE+yZ4fu0D7a4Ye
O1Zxd5CflAK4g5sKnQBXfA9HtsOdTlb3JloYT17Uw7EFCKMJNSm0vIygkqBA
humTUV2n50pyQVtzJ9xRNJkbHHOyBnGDDzugTaHO4URpmAyPvJwMV1mBKE10
OhTGQwX0fVquNPWontE2Dj2gqsW1onVGODav11b8CTOSaueH//FMaQC4l4c/
+Dd4pHP79q07d36JIsQULz2jgrYUxRQlwFzGiHfti/UngcEtY0e7U1Hok2PU
eAiEFa4znrEh4gEePkVTOkIjGDj8Ec2eZ55KBZEyWexe7nw3zOrmoxukw9xQ
UAihkz4dBIZ27dpXLJaXzjYjaJ9diaF9ftPb4MOf5i1WnoreGUPuIZDHzTW+
YuP06BkUvjTcPWTxqLR4DJo/18s5wz2qH5XKBbMnnP6kx4W5M/5aaLOzn8rh
YgXaCmqETqtzdlLnQLdKN35Ays0aRD10HvFcicLdFc5whbRktlaHrEkFbY4J
SeYGRA2lkl7jiLerQrbmwem1leqme3pmAgD+UAfdy/9rsfxn6WYA7a1bQa/f
v2fP8VpV5Kh+YjHt7qDPaS1xQ2YFW5mn1Obw4V2OcjX0sS2+SBoPApx1zgFt
Dk39qYiLHvTGjrQhtDkL6yuxqKIbYH4GZ6Wsyp6T0MkY2pO00A66/gCZYI+e
5qxHn9h1+0QDKFALcA9bBe1+NbRlhmTuKK+ObeKMGOnrzCoqXSCjTS3zgwVl
YGDg5jKL0M4wqKBfGLC10w0d1iA1T5E4QvCjE9+CBqxBSsvoQJuqMhCGK/YU
ZcFq9wvPKAe0M3xLsrbKqAcUsXE4sojc0DZoq95e/qHDRvrFr+Zdh8toCNrP
r24WltF0VqdififxY5P9SbIUZiPnGBA7qN0DX1HJUcwuKBlCG+IMh2tNhzxu
NMGOBT0Q3iV+oW6BJQk51ZaSKHXAkfMsEqUSXgVSOHDIHTh7TkKnAUP75pHF
4MOv3liT4c7K92lYcTTPMpPhngo1fzlIlQRDSIyUCtoash0F2ir3ULRXarPN
9X2y+Mf1RMF5YBDOcOOFIureK3S/PpVDzkNbXzehRF3WIMEl58DAIZuf0NKa
FOYJFbS5h5HTIUfPCJZCRxh6ypqz2jy0OaYpgc2GM9u9sk5j6kA7o9tWwoBO
KJN7prsPoBXyO+vgbgXL2rMJAu3EkQnFK7TQBiC0M+ghpFgRpVg/JSOy2Muq
IyFMY1Li9ldHElGPXTXXxpAPQ/oVqy8U8rn9DeC6FU+fZYhtSL6khjZjScLD
i92Nt6Ak4FTe4VcNQ9WIesVa4o2lUmEfGo7spdWxZA5CJ30SpwsPIZSuQmgL
c+0vT95tvBOchsY1vvfq0lSqniX/VHWgLU7ZOLioHPJMJifZTq/Y01jHVC3z
KCDI8NDuVd4iZXimXPWQRMmExcUhjdoCunV5ivg7UesmDhZ6rEHsnqlDTq9k
lN6vqMs53pmMMcMVN8zKIuI57fHLL/IT175q/4fegKKRGt29RiK4Wznailti
Jz3EV0Veft08/Anqqr9c/PV3h/xfFVssHx3XOuQQegGH1U3fTlWWWN0K32jS
Szxqqyfgxy+sylZ/QpxsmysSpTxL1pJgXMIL3dC4BqIkQoGtxOmAL780R6xV
LElyyIvRWgLplxweNbU5gjxe5kbVoTm801UJZvFaQicjEqfXd2z9vBh/Hr/k
XM13v8Of/+XVXefvXD/u+RUP7T7Nyx09/0oYjFEC/FxUk3Sh/9Eup3Rg8pXz
Q3v4q8rbUOasZbOaojVrN6xD0vdNzKSIr7E495UkEe2mUCrre32i2dOlDRJ1
U/uouViDFG+UV0BdzsAYrkQ95Yy4H4UudWYYjElr8zP2vj51e+dunJwvt8VS
9NtK82IOqcxH6jy++g3W6T/cE5GlH/Wgjcn+9T4jkdKUk0iW1L9pREoL1EYy
+J7KtTtNzZIEvseBJIx4BlB5klbNQgid+FbqybVl5eRRmREe0XmkKntuEfYg
CKOCbmqdbQr0USroYk+4K5lMNDc3t7Z2POjhOPYMo0v1sbc4Gg4h7e4IHc0K
Zg1SMQ/1sZHHYFtGrqbT9Oo87SZqrC2RH6HZU8SjQR+PbfXTE67yKok65VAn
K/YeoR8JteVqK1oA/U2zZaU1UQ/g0pz+J9pDPlgpCNpoo2muB6M3CGslXeEY
O9ZRwR23gltPf7P+YgF5cS3181n0TCiZi7u/UDEgvUmjhg0HN89gZVCtM6Cy
h7c0pUwNYHNkyXupsCp1+6IqbV6dfw7HQwYr2VEkUMJHs9mVtbYxLDpnXsnc
3gFwzE5oHiubaMEMSOdu1NffOH1kx3uTx/7m87ND0HDERWo6u6BkwdmmwdLY
jbBgdPexQfxR61OImNA2kMKhPbR6tOe1BWirR2lNfkiNUvRpC/7CMyBxwj9K
/ZFesQaYYYlcU74MKBm5mlFxNeW6ly4UXHg1Ogtq0FKPUAo3sI+JmNA2kMcC
2pAcyfbl/tAh9xsW5Fov2X1ZlR0k/t+rfsBfVAxIWomf+gYfPwFlvbv+e0qZ
IO1d+PKUsl0Xg+UoOrZliutEJptY4xiHvo3fHm4eSDLQdsldZVNwNa+6DpLV
kxz3It3YOZ4s8BRbbXOumgwtwyEmtA3k8YB2LdoYCKAwYUn5V6+MK1JTJbSd
BWa6guJBnwGJSvLUMlDU2MnvHT13zrf4NVDWc6VH0TPGrKoQi+9+7vl41ou4
zjHjSr4qX2JFVE6dA0gmfed8GiT6ck/VvvL3QS0zNl03uBe55ZJ77hRw/dlZ
rvLy3Q2PqVf+hIkJbQN5TKCNCRAwWjEdIuRDo5I8Da5M/ZE8KCMGJArMt2li
ee/c50Dis21EB/B5B2JRkxEP6jjHWuzUH5r7NIN2Icky9d9ZIC/6NeS9Zjaw
lYTc94KL2njDRPWwiQltA3l8oP3HcuKES2pecfmQ8+mnZn0ns6+5GJBoUb9a
/D27kDq3hpZGdMD5MO0S8wQul/+xyLqGQTtvMkztwjMtjRmncLjp3svA+dJN
ySMmtA3k0UG7bY21iIc2W1JTQ0C+PdNimXdE2RKfiwEJZYZFYQJkTWmCDqpa
Lpf/VgVt42SdCNovLvz6yJH9hKypCu34y30vJrSHXUxoG8ioQRv5yTOvZOjL
2fS58Qr5sBG0JejHFp/gFsPTNYQBqT6jaIXWqsGjbFluLUKkpuTyCddESKII
35oNJ7Sl2zuBDhNdZ9QNkw/aS0+b0B42MaFtIKMF7f5be/5aVAQmrctr4s3J
xisrSp4FzuzO28i6GkL78vo/Er5iRaRdf/tfmAFpz6lIPB6LhI6sdE6ciN5r
44qmlO2qTyYu7l4CxoCnpm9h62OFQLuwZNKu2U8DdM92743F49FwlXdTsNPw
XmDwI4vlNZh+cEGcTFGLCW0DGTVog65duepNnrHokz00ULhUO62o6M90LxmK
/1W0hUxv25Yzv10srXrT+yoGpNVV+Ayc9MOmeezqxNnr6HJ0Z8X0p8ZO3kgY
Um/sBL9ymP2vsS+QZbTCkgFp2bVwCqvoqekVncb3IjeumP4sVjXHGqApAxMT
2gYyitCGIne21CNpK9ButZwoFlfLBZE6G+vrm5qaGlva1E9R6mwD0jni5lEm
9RTaizpHRaufiZjQNpBRhvZAJXVueVHR67d/1o/IlJxiQttAHnNom2KKgZjQ
NhAT2qY8uWJC20BMaJvy5IoJbQMxoW3KkysmtA3EhLYpT66Y0DaQwUF7hJA+
uGILz/VIBiizrUZC2LlyE9q5pEBoqyh1FI6dYdNiEMUWnkuTUkPPM3w3oS5d
Vz3digvT5bFqq8G3XqEtn7tVsYwetFMRr8sbjscCHk91fIR3JgxHXdmCudFY
k6po6AxKLvC5D6jYQeTSTUn7BwtoOTR0C90tm6utlJi4qqTcNeNGe3zaSq3z
4For/zBj1KpARgraUgQT/rLQt1LMB756ggEY6Esd06tA6Q7vcZcQWXfnzjH0
Ycn1B5rKh1BXJIBClLnDeaBNecjpU6a8l4xzO6sj3MCv7qrqlPSaWGxB/VWT
iyijx8GnUbuPXGRxJQsLBq93t6wOpTSOIV2vrTSMpgIjqBrwj2db0Qc8oBFG
aUQtd+kgWhUpOGLQDgOAeCqrI7EUu2K1WMPpRJnFUhYaFLQ7zr1TUvLOF9vP
hU8fO3H5QXfDxvkA2osua6A9+LpQJG6Hyx9NpLN5oH3k1xbLvGVrQIK7P0G5
exdGtgTSUA8+3MUX0XUi3PcGJNxFPp36Mlcs+iGRTwpRhtaBlKlXp1Qugkv5
q2QF8cJVQQqrZ4roqqeoQiq+S5qKXmBFCk31uLWVmBRfzKuGokyDko/e/0Ba
lbbfUKEtRUvtNpvN4akMehCfv83po0RYANq2MO8Ly4mAL5DslyMBP4xq3d9/
bvMX8xctmj9/yYmb17d/sQh8XOQ+cmb7F/PnL/pi3bolELbvfLH5dAfK3Xr9
2BfwSsn8LzZu37znemsvuFi3bwmw2jdbGzaDvIsWLdl4ujtHXYUKp3a24+Kc
SRMmTCgGMv6laVN/Dxm8yvZc5aD966+rTitDNR2p+9iA28cCKSts5YQdXmYj
PxGWTiQ2V8xWH7VaeW9CVxlWjqhNn7Z8YgGQAegtwPjR5GKsFEZ8T6IgiDze
OdqKD3bQS7VVIgVw/OaPa1txF0lcbnyxkM5HTTEXTkQdKaywVuUc8hsH1y3+
6+uvvvbaazNmONfsv4yhnbhyOI8ucqyUxSSw2lGsjjLCC4AwEsoVLgBJePsS
7FufqLu5+R344R33iYv04iL3ui8WwavzN0OXvu7QFyWc7LkJTfXNPYtKSr4I
Xz+EL7r3Xe4tpAmN7ijC1M52XH4d3dkrM19B0UN+/+8WGMu0joN2+dHTtAvp
OnBiHBB1vHaht8pCNAghHgQvBd6Hji48HmRWtV4FXPpCod2LA01JVHBILhZD
rFcWi9JtLD1k9wrhRNjFx7qtsvxoJ4vRe/O1Yx+OVKJEJBxcq6KJDIT2nYvL
3vzLu5+s//7U9+vnz/if/1lQ09aVuvbtzJkzZ729bfrMg9dzL0ThiJy20gBE
Ax8upABoAzkNp85L6nq7jwFAv7MZkoP03oTY/uIYBGn39UUQ29ux4X5wfTv4
tv16B8t+c88SBvZ9dUOFdX9/utpTAvzxCLba2ey1rycBZNcma8G0+ssLjee+
+HfLL1c26ENbFNpFZCEsjIht3mz3qgPIsC6Ro08MoA/r9FZxMqebRQ/a+pUq
0JZUnRAHqOI6YS5dRWyzhlG1imLLHve2EqEtBBrKqQnXYURoD7xVcfnYagd3
rvuo9N158+bNmAGhfb6l6/KWhQDaLfc7Wu4/MPBocUROb0yTpDBod9dBgzt/
CUToutOI6hbDWQ/avXX7kL3uZtmRQ07kHfexbt06BHVT4erqUCiiHxOIxPd0
4BigCNrAXr9e2wihvf5q+rrn98BqNxUC7X7WV8VOqJgd0dXT9Ffj0T7LeZH5
F2GzrPfxndUoa47uql8pD23yh4bv5eMDGkFbWQQTYmBpDbTSfI91W/Vz0IaO
umJOc2tCWiAj8zc66FbF0L5+ZKXD4fjrJ97joVM7XE4A7Uhn1+WdANp/nTKt
4jf2b3XWqZDIyXAZCoRnd5Z5PJ5AmItbXRi0+/s79swnK94kdmD3dQzXRes2
upFDvmg7pLptvn5s3RL01b15z559l5u7+8ky2vxwa/P2d3CWfQ05VMWSCrmQ
i+1K5kwRtDKHPHvnswkw9dIdmwG0p34ZOOj+f8Aj919uGiy0BZdS7Dqq8GyK
k6mjZFbw3Apw9xRlhGqNuivvZIqTSk2lDNosSm5Pd7cyMYTlcK5jHg0zsnai
IsuyftjAx7CtcCrRaudrQK4g0SEfQqtiaIe2fQyg/ZH3QOjUfpcTWO3/+XJ3
TV3lcmC1jVuBhNekQuNfIykU2v2t4c3ISjeQ793IIQeWfNF8tBx+GoOV973x
XLu38QQCNPXnkRyqMzLd1fC9lsUTzq0Wv4zWdfEVPNf+aOlMGJNj6hfvA2hb
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
2WzX3jnw8js7fuSh3YSg/fam8/jlF7eMofLk2OKGYLRZz0B+OzPwSl7ev0Y/
9HSlksALbuukC+IaHwx9g6mSyRTOxPw33IsoptLNzc2J5taH6trUPUqFgoyO
fSO2QzFOXelksjGZ6lJbKd5MsVUjvjq4yN4BFAN6qVsSkke1JFs7eogCouer
wC+JF9CaaeYetQ5cQwkPQrOm1durTkZhQ2FEZ87ilJr/mlFryNw2/FA0Djmb
lrGildJUNpw65PzPihoZCnkoYH7967987PP5duzYs/fgsUs3Erl2o7m43Wj2
soD4Njrpob+WeeCMtqTUFTi4jUW4LvVhJ1wOlpEXXZXnA/RXeyASYdlLAzEh
PLfFEYxLUiwgFiVVuhxUE181ef8FsRmoDjjpF1cw3i/F3Cih3QH/caK8QZcS
FbwyLuG7U9WIWr1r1+vowqSK+xTazZe2/ydN99aqQwDavE+En7LmVUgP8Z7Y
V6XTc+67Yl647kj7FPvCTc9z5GDJ6T4xoQvRYSSjLkxXlAqYuWHWpo97/aro
xm5d8T9VDiiXUbOCrWTU6MfK571O/DF5BliWor8FbnNKZ5ReLmtcJKVe4a7I
FEzdIOTmtA9D9aRULZbJMJQrMzLWJFnujZv25ZeqdPqRvE9j96FVg9d73i8s
KvHU3BvcHvJ0isSyNswH43EXUi7cF5JMDcv+8nQyEY/Hk/mqVdWIH/SltRMs
H53pMdqN1suL7v4F8lNvb586pbiJhc+Wax+EcFH9uyqtzs6IgjRVac3SZwWI
aovT2ZMj5lLlRHjhtekVc4oXc6p7c9+q2XNXRh/w6dQlCZuIhHrV+0e0NZBq
hVZXK6bXYsKSCzOmckY9SKq21+R+KPg+cj4ydhXX+yvL8zt+uHIzeiUSiVy/
fr1y5X//6/vHzZNf/ajN737/scUypzaVfw/5YKU/197GYRGdWxrGAnP8nF+N
Eb3nHGJQ6wjppqx3icgWrPYItAZbaLNYpp+6RXejNd3cOOOX7x+Nm9DuRw3+
8P7dlu4RPh5iyj+nYJTR2Qnn24/IgRKxYjytoG74M/+C/nlzY3W7eV4bCR14
TZYVUwYnfA9iaxHaGcpI1AsXNKoO7Ny9efMmn2/f92fqkiYVgyImtE0Zqigu
ch9bWhmFDoMrNVlWcokJbVOGSUYJ0aoqTWjnkscN2vqLJqNTtylPmjxCaMvp
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
/s7Sm36GAOcS/2ZZ7v8Bd/yQPQ==
    "], {{0, 449}, {329, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{204., Automatic},
  ImageSizeRaw->{329, 449},
  PlotRange->{{0, 329}, {0, 449}}]], "Input",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["\<\
Select the next line and evaluate it \[OpenCurlyQuote]in-place\
\[CloseCurlyQuote]\
\>", "Subsubexercise",
 CellChangeTimes->{{3.5797999743286247`*^9, 3.579800022206753*^9}}],

Cell[BoxData[
 RowBox[{"metabolite", "[", 
  RowBox[{"\"\<atp\>\"", ",", " ", "\"\<c\>\""}], "]"}]], "Input",
 Evaluatable->False],

Cell["\<\
You can get back to InputForm by using the mouse context menu or by pressing \
Cmd + Shift + I (same as Menu \[RightArrow] Cell \[RightArrow] Convert to \
\[RightArrow] InputForm)\
\>", "Text",
 CellChangeTimes->{{3.579792806118498*^9, 3.579792864312096*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
K0f2zI6I2H7p5u5ZcPmFNz5c/6BdCrpBccmy4JzbLF7ex9ZBL1/EeKrh76HH
d43xVNNTZoHjb4zzmRWwS2urcXJea64hJl7bK0zFcatFUM8t+FpxPGjbX84Y
hE8u9shnWJocPkhVW/jom8qdE4fb0c0vYzuS7567ixIftL35tXX815bx87rH
zzVp5nRqYtvDZ7eGz2p+40vD6zMbXp9R949TBgl06gkLF85FeFhqFIzAWQzl
R5PgsptojiISrTRk2q4dNy7qkAORbVVm5lS1+ttLzY7afSCEcBkjJgoJ6ASe
6h3sWmx+1u18NcssB+pB43Ung4NO0leFf6o182+Wl5cCFZU2mmn+cm7kjqoA
sH0PxcwsaMIP6jER4gMYg/vZrjiIR61JHk7QUfpYkKHYLIA3a20WWqk1rpbq
yEqIwm75tTGx4GBMBrfMOq3PyYBcVEXpAOgcT48sj8Ahl+47c/TnL8HOn3cU
S0A3iI5ZZu9yrN3Vs3xXT/T3L8tTTcTantlyvnTkgvUnuai19ui1vcdPtoFt
Vs08S/i87vC55vA5XW/Edrwxu/31WS2vf/X81188fW1m/WvTa3/10fXBmoyg
/b6HmV8D8ry75RY+01WyGy6bOzEOL7vJrH/h890HTV49K+dGGlz6x2o9FDXu
fy08fDnpvcB+q18OdNzEhFUKugjubRAMui/2QSQGXdlTDnQcpjiJL2cWaRKB
joeXZElQCDpmWWQYz5+GF3S1R4HBpslj1xZuyIpTMVizpgKaaZOgfRfwAl5t
RgwDOmCXdxcD0kVuL4NdV+u9D1WqtxMLJKAbdncuZBt7m/X1OZZfz+n+daz5
17Fdr83qeG1W+2tftvzLF8//ecbTf55e/08xtX83ebBAB0e9sLUG4VPS5fM5
DsW8wo2/Ve/9BIIONSNIITR4NW7yfgrgMeNrZkmggzIvy/UFdBNKrTjnvu67
u8GpFNTfxCt74g+LXIbcSfxYGV5+bpsEdBIWIdCFX2a7OTjznyCrclSBjs6J
12BkYVG1R6GtlqSDU6vAptOmWgOuAdKnRvGg67kXyYHOVCwLumF350K2sbdZ
/2WW5V9mdf/zV+Z//qrrn7/o+Kcv2v9pRss/Tn/+j58//Yfo+l9Nq/3/IgcK
OumCjy3X0DTr1HKr+9qKt9Tq8K0XS3Q5aehgOJp4hcvRzkJk+/ZMvZ9d1Ayc
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
d+/eJfZeIVq714mHxWz/86f5cPivs3d6LHiU7A9fxqEZ6w9s8Ft8+vMvPnHY
OJzzGLl5+Ec96MOvOz9eXA4J+AriyYias3+8Hwo96W+2wihfAAr5+vPTKOd7
nR/f/bjTTF6WWtcTxWf5sBOyXfjk0XIIJXz7qOcXCHSqmzOKfjfRw9P5yaNw
6MtLJyDQ5Ik/LqMd8cAHCGvS/PIUeh9GU7tMnQ+jBX5jRRTBixo7h0qog0yo
3leF6nm/jUzGmzyPN2jai4VmkmTrfp7m0I1JdKil46He/hcbGy/S12vpkZY/
242SbJPpqsxYuEZyEp5K8S9G6o0lpYlp/pLJuB+BDp1mdvlz/HullSL+5Vdg
mr9itDmRQH1VhLiXW1uIcgLPx7EHFOq0frO6+tXKysqzZ8/Gxsb+ht9EjCtN
r3Rf/urMoN2UEmc98dlCjO2N32mrp1OXjR2eNjsCEbp5YNdWsMNejXfUTDyH
K0gKMdNSuNZrc/TeiD1utdDE5ovDHVDGpedkz8Kwjc6Lnv0mmZy7SMtXauMp
qYvI4XlA7r/12W7FzSxPwfe/vf853XURuq6z61nd+iURwouUOYeZygW6THdR
RuEHH98Cta57NMl/HiBnIUBA2poZdNnoXWKqb7sRI/kQAUymI64H+EOwu8FS
bWtf2sJ7VkabqTOT2T36TLdeWj7VjLsWVeuPJecGTprNjaOr4p6lDlv1u30z
yfhjp8VyavAzj+MIKf3kwKSYaWHkPG2jxXk/skXbGBiwWJw+/0241c2d4USU
1BtF5kiCv+GotTRdY9s2W8u1aV+vhTxSzZ7lLdiRWL+PQfcAf1jubrCa69oX
ya4iKIn/SqCiVfTy5UtkyG1tbQmCsLGxQebLUKdVNOeWlpZGR0f/hju2iWTh
lQpQaHAluBJR7+PBjIxpHhYNR8LROGzhK2i7OIeKikYi0fiW/FbcikRWIzFF
Ir19IpFYTJlfK18Mhidj8YwZd430QFcyKYhX8F0URf2BWpenHXDnXMT31W0H
4k3HLXe9yUyAAHnqW9wjPm93E2DgvB/fWvx9DLpZtHWlAejQ68e3YvQ+pkrz
kM/bjn/shoKCul4Ajrl1Kojv4mBwObR8qwXhy3Y/moj5u4CofTMka2QcwHt+
PIJqpL/vZrvL7bJjrp3yraI8q95TwGqHx+fttVGmgWLTXRR+DQ5X3ygvAx2c
F9rGOaNuatly9Y6OtiYbOHF5oeSX63/CoEOnue5pgB94epr7VVmC7ls8T1Hu
xoJerpEreK/cDdlN2pug65uZGYAXZPcGthLCFILJu8MLcwO1DHQS8XfNADr8
pGPQ1fdNjLqhB3FqZIlkmRuAjzdD+IMAeWrdD9T1il1muQB0yHBqxcOGy7ia
K0A3vI1rNDVcJGUnwj7Arq0/SpDF4LbqPQkNwHQloKt3jcnqZaCTbl+EER/u
jBfO4uXmQ9GKI6BDp+lzw8vuxNPct9p1oEvw8x1NjV2+/X7hctKeBN0R91wi
BK6Pte6ZCPRbzf8bTcy5JaDjl0cHu5rtNpuFWHQUdOL4iRRlM+56lky7kkfa
1D+m1KILhKhFFwqHRIsOaa6vnoI3/KkZcDpHasTYnGGFhKlJRgAo15lxaCQG
neU+L69XG3QcZ6XnS+BmY6Czs7Edmwax9512H+gM5a50oDt08IDJVFF5MFtk
Haw0mSpzZSXwrQrqqTpYPNC50PMb7QSjyN4MEwL9AvDqCAVd9H4jptapvlsT
3l6zpOuaGii2d4dYiQR0pwaGR4aRRkaGB73TIXW9EsiIB9aKoEuEgG9H2u5M
gn1o8RFbjXaWRdoQ0HWGoxh05ubBEVwn0uDwVAjoRkEX1aw3A+gsCtDBtF63
+kz2mwzQ7QelAR0GF9KBg1nCC0yynG1CVCmtprKqqKBLLODeKzDKu5KQgI7M
TZwZJ0O+UzY2LEa7rgOTM4PH4bCGK4QSM9gYuxxIP16fCXS0x4rVdIOO8aVG
BVMfTQ3XeUI8k3NZVU1RQAdd14HJ6avH8QTflVRh8OZJXvpBHIuEHbx6ZHIv
yADdfpA+6A5VViD4VCJj60AVTUemF8JRVSV45FYcQFyqqsAPbiXm26FDaDfO
ikxB2A2GGuylhyPLjSANjhWrwjhF9VRAPUUFHem9Amrws6sAXW3LNb/f24q7
iNVkplJiX4211UK64wYcGr2Lc1l6vdOLi/MTIwO93gV1vd0ZQJdY9Z0hp9/l
Z9Nq1IY0nxmeCAYDF/HMSNc07F3BkxEmW6svgOqcHu5zf7qobdFJ6pVtu9OC
jmyPnkEt5MxOfJqJNTdMWVjvkuPvnzdJD4E9dMxwj8kA3X6QvntJFQIS6rUe
RAiqoB1Sgi5keSHbrYIae6TjCRlSXVfc59XaW4FSUNGEaqQetB/1jlE+OKCq
quATivaLoEsIwcD09DztnAF2CASExQ5mXNW3XexogInUanQIxg6bG+VvYJeP
dwdgMI1f9DH3EnxU34xGvdBH7paBDkzBFOgSwpfYna81ZaexzjJzdTGdGnws
7nw8fMacqtPUGwAAYtDZZBadncxfKLexn1Q/A91DO4zIzSRI15Xj7Ow0h9Fp
clyDB53mmscOvVlSeHSqC32wi4eAU7/s7PaMSgo6IYrKDIXD22UdC6Fhd8fg
RLCQMoLjl10Do3zmjLtJiu7qG0zYzqpigDJV4YE6gB4bskttYr7JNg4DBqkd
xxIJ0Gg1uHSCRFw4EBHoV1FZshOPhsNRerfx6JbO5rKCo7x4UO4SgjdhGgKT
k4pMRvRhhyjNogUev108ujc7jTtDOfjRFQa6+aEz4s8WePVMa/vLFaS1+xaO
M7cX5HnywIV++on1jn46q00ySX9kd5P0QIdNMtxFRWJTEsgUY8bdYdRrpZuH
GN/EjcOHkBV46LBsLwad2F+tIqA7BD1jU4WknnJ/H9sn4bajOjUNQRQlnWXD
Iaqcyg10WbDu6dOnp0+fRgVKEzeDQ8C3mhPe6flp35CjzuzCc/180OdodPqC
RTKgZN7geSo1bUcGQ0x2V19fnxv+ud2Dy7vzR1dvCRhDVmoY7ZAcdJU5gg53
Zw9QKw82ETkP4W5tyrsEfSz397F9Cnlamk66R2W3CThENRgOUeVVTqDLaNSh
ot577z2r1frxxx9L06P3u5AV55qOK/LzUzjdX7B1h1qP/t8M2PMHnUDKkDhi
kemt/iJRWJDOZwmlndzStehk86eHDpARt6qKiqqURccmGapMFVWyDcgvgk5M
xD1fOhuBGUnG9CSqqtrDFp2hHarigu7q1auIcu+8887m5qY0nUzuNHhko7vx
wGU29Gs2W09MR2GQ7VpLg5l2b63u0SUxp9Xq9M/7yfQZV9M4Mi/2IUMeRy2d
z3fAWhcbBZ2QWurIcfb2G2z+P+C0WE8NjFxsqkbpbdiwFAeEqxvaO1C6xjy+
TELI38J6tZaG9inWT4Ezki1RhGWJMPHn7SLl17aNCYnlbnqs5bK/RP5NepMR
b2yTVIVLMYsaUJqzNmRIVPage8WCnOgJZf7Zz3529OjRubk55b41MnfPWZv7
F8K0V4tw0dEEK1jMDe3u7mtLPM7GWdoGhr3egWYLzA0RGzDKlv5xlmaX66QZ
9lzBe4ThJryE3z3sHemzYaYx0K31WDg7W+oIduMkthvX6RQYZ25sa+sYDfLY
H4Az2du9vpF2PDfHptUI6DpDxNojBl+CLYo0WbqGR0cHXZhgjQFs9qmXKHYz
3/emNndLg8j1Rpf7FByoRdHtkJ5FVzIZoDNUXuUNulgsdv36dWlRJ06cQOac
2+3WrIgPftrIpiIc16hpJwR6EYK6Hiu7tEgzriMcVzdOiAMA4SxOErFhvR/7
DoXJDBfqq4qzD8BJEXQSrd81A+jwCqB1GBnmrKfnKW7XoLSa06IzwJ0WuUUn
EVmeQxZFil5SEew3RWbZtJcoguUGB24FesFoZN74t5sM0BkyVCLlDTqCtY8+
+oh8vHHjBvpot9tRIfq1RScGTtG+ZDfgCBGMExFEciz6Pa6Tdoi2Az49fgY6
hLZxCoW1fuYkGfWDF1DbxCo9WDEZIVnqyElBh2DYzTrR61PYq+iKOBA3oxij
Mzd7/f5xJN/4fFhIiA6i4gESB1S9JYokgWCwi003z7i1lp9vjwzQlV180Odq
8yxqDfim2WWoWMobdLdv37ZiDQ0NLS8vo04r2p6cnMxYo7D4KThg15xdVYEu
jCPboP7toNfncRxRgM6vBh0+3D3D5jLWp1KgW8NLHTlzC1nqKOm6ymC4hjDF
mZ23xakB1WREj+IGVHjCJ3iImyEDnfbKHQq68yxajmR6d9u150AndZotufAV
F2U2Sxx+9U10vFLDfFdrd5pdasWhX8BiCMDyN/QstMs9RxdbYXCH65spaI4P
P1x1/vJ8xcVXIWN0HR0dhHW/+tWv0P9nz57Nrk4BSMU55wXcJ+W4llHy7K97
7JBOZiAeu2vhe2ZjdHqgw8Yh6wgvDllY1zXqP4+NPbbUEWrBhp8CdODHjkq7
wOYTQvAEpZ2MwKAzD7F7C994NDaFAbqSgU69FKvoAt+nBoeW71PoFvgagctR
hwPGMSxN7cT9qGtgQs8uU90bWe1S6wHcNnSVFr4VgWkD86nBHzKgregoaZ9d
o3N0RWPUSCzHAB0ROur48eOEdb/85S9jMd1fkNh0r+1Y+62JaVQg7r1yXCMs
eaak6hieX1rhE8IdR7WJqzkzPDE5AtOUyOwjE68K0HWL6/uEADbbas4MfvbZ
QBvpFNu6GehMnK1VXOrImZvxEJ/K126spRrtrW3x+HxXm8mPM5uM0H6acIQK
k8Xpmw8uTd/EA4/UQTTtEkUDdEW16AoGXUYPnzi9XunsIjLu2qXym1JLOqyh
qFkLdHqtC501pyI+0dBS8nHpMQgblQXoaGdqG/z2d6QKnHWNRCLEnJuYmEhT
C4/vBybO2ti9QG4NYVkMkz4eTcQCQywUutk10GfH6b6o4sdlDQw/tpA5FrjK
Yqxyp9xuOwNdaqkjx9GljqhQdD+s34c1gBclji6Qk/qKVDs8w65amUVn01j6
F56+mpqmMNuHAtQeTLtEEZxP5KCrNSYj8pUytHhtKpw4sq88zK+bR7+qrGNp
vhygDzUyZsSQ6aIfr8I1aEXi+1RtaZ7SuU6KHy+QxEUKpuZZ+Tin3ev3NqZu
m5hkVwp0suDqYTnuQp+aIMQK5aoYQ4+rOU17GOSnXwo6LZcttWcX8eDCp4+e
ObAYIaWGOH192Wqrth5rFecM/X1NHNqVme47SIW7lzx58uTChQuZaxJ4KHFl
JRhWfkGwujAaF7NFo9E4nhLFKwOz+DZhqeBqOKoRYAcXQNJhqWOasqLQuJyo
AwWGwrtjfaIe6P6hJFJDr+ATkoUqEn146h0d7eCwZCLhxIVFWI9zxHHR6xu5
2NZyk/TvdEKmK1yDoqvE9wlcK93uQb2ZAg3QRcdtppSLFILblNz1qLqhxe1q
wpt2Ajcp6PSCqxOtjBw3mZq/ZPccGS5ucdTCiNxjmAQMj59H/ZW+QVcKdGqX
LV7m2dWNPbtEDy5rg6Pj4hgP3ajzMAOIYYyjrKBe2HWejNWI5sTuURH96Azt
WO1t0BEvIBJOPCFMpSbBcaSmI26ZmzoNmU4m6iUh01WuQbRb+n4g3U+tBugk
mnVB8OHxFM1MJ1ncEhKg6QwOkScBnW5wddLc6w0mU9NtsfwZGMdu9Pmvik5W
t5sgmMli4LJm15W6bMXo2WHPLuojwQaRvkh9xWS8iHVtIaQVxzW5B5xmOpO4
u2SAbj9o74NOHAQgoUJIBCd+ivYTLXYxuJxeyHSVa1AGiKXJI3WREocyyLDG
FCufzmEpJuv1g6vj0wnYxfCh9Fxgwm6KD/WA/1Tr8hosgWy4sSLM90pBp3TZ
wuxSODxQrEmgrgAd6jZ30BfpWUdWivY6sZLJAN1+0H4DXSpueXTxmquJrr/D
lpteyHT1jEB+oCMv/zJZqIuUHHSp8gno6hWT9frB1cVsE5KuLAGdX6Bhlhua
6hGFfNHElgRiGi5baUAnmZpQg66TvFKRrVfaXTJAtx+0f0FHJAQgGKYFuoR6
IdP1QHfKlxPoSCh18gZG7JPJfMtJ+czpPREjL0P0i2E2SdW6wdWR7rUdUQc3
BnDxEGbZTCDUeF2QQYxP47Il8ezSBx2rb6wNQdLc5sKDdcf6U1+KwMfjIvgE
tC1+szwv/VRmGaDbD1LPtObCqQKy4YqUoCuyH53cC0i6UCVwuanF4w8szvuH
AD9k+lsnZLoe6Opdw/OLunHEVKDDLlI4ajpxkRIndulkhLn55vT80jRuD5tW
kFatF1wdsayVRu9MiYAOj7nhwT3mLCoBnabL1rOExLNrATy7MoAO1oNDUI4n
aHsSvz+RTUbAly+uWpIGZscXAjxUd8jbZA3Q7Qfpge5QCXWQqaooodRtktgL
0lUSeNkC8TQj/jxsQK7Zx0b1NUOmq1yDUr5PaZYtKJb1QQpzkUJHERcp8h5G
khP1Llm1dkYwZdWawdUTQXg1xtV52VvV5/rqcUcSnkt+dX5mZoG0g4CuD7cq
9kjLZSuWVHp2EQ+uWOoRj0IItTpo1WagUfZ6nXC/vRq8lMHdJEoCs/ulgdmJ
Az9Ez4DA7NvgqCf5CrLMXADoivca+XwEUdO7OwYnVgoqhJ1F+q9JM313rU/U
A90PshYqIfvMCimsvGJ0XbOXQEKjq3dkGTId+z7leJmxixQpmQRPp6k4CaWs
rmYK6q4Krr40/C6yAJfS3szp28NctiKRWIqW6JP0Y+aidoRyaivNlnc8uhxw
ors2EPx+Y1kXJCszSqOmkw8e/IoQjaIS0p8q9c6EdFvvC9XcRdYnjqeWHMqU
fgS79NqBoMvnsu9RZX8dt7uQXIsqk/Jp6vaDLqlaG8hZ6drAbrfnnvLnJMsi
ebqSK0lA1wADpDG8Y2Kg3dFxJ84ybhfoJOMqZPXrSQi5DnK73L4dZuoZoNvh
yvI6Fl5CNt98PndYPsqztvyaWgLQSZtF3BTdMxv5HE6E2pqEeTQ7A528Bh58
iqw9ufITnVBOV0IFOttUkdZIyEOuC0UJuW6AbldIfeGku7I5VrsUVWm5NmN7
lF91eTa1xKCLsfmgVJIqtrkQGndQZ0sTV+ecXN1iWTWippMibjhsVrxmn/Ui
zRaL2drsiYlL9mK0iCVfr7g2trn7DkvWWC8ZFPA+YVWxdJE0hoEOtlngJvUJ
h2+5WK/WbL88HiSp8cCALOI6S5kITDhJTWbnvCDMDJwkh77rHuXz+brFrxhA
p6ANQdAPsxYqIfvMUqm5hzBbwNnsWWV+qtMfjn+r2ZaqHPJXQEt2jPJs6g4A
nSS2eXvH6Aof858HSI14b/WdJHFOtiCfcEMrajouIkqsuDC8lbUX5tBr7C7U
L752j4cayZI9yEfeos7VOUbGxz0t9fj15Xdw4drrJaGBGksXIVkNuomwkCQR
1+mp8Tfwisb6tmvjviEnBuj58Qg7FnOTRFyXpFTbW9xtqRG/ky53M3Yh9Ybz
+b7FS1Y46BCdDNBtn7J6qnMoTlZgMsdicodPaZXMMOKkqZ0AOhbbXJ2d7zAD
wSLJVNR0uidKo6aTDyRCHRmj88B2v3yMzuqPEZqhyk883iJ7EDmr0a7RSFK6
XhL2sfWSkqbAf2zpImzLQSf6DBB7rBMlC/NXAVyOO7QEshzJ1h9lWKt3jYnF
iykYkuGzYNfZbi4CUuN+4lkaSearhD7oRCmIpAYUAV32+aWJpDqj66qndM+0
ls6dO3dMR+3t7YpCc6Vc+vbsXu0I0IH/4awklzA/PtTmaLBZsBNkXbc0arr0
KIsG6FLbkhqxJyT2YDS33hGrwaEeiF8l864nu9h6SfJJtXQRElUWnbnXO0FC
rk9MB3GGXjmgSGD21qB4rKQ7Kk9hr1lM7dp20GUUAl2uh4gyxujSK83jqZl/
eXn5zTfftKr005/+9NmzZ6xQ9lfkFu1W5exHJx32zP370wOdOK2APuN3nXM2
p9s77nVaaOi5GI2a/pzlmsoNdHQhIayRiasaowk6YtFpLV2ELBpjdPJxtLgm
6EzOJUF2LJE8RdYYA3R7XmkeT71DPB6PGnSXL1/eloal3auRX9+ZQZWe9mCt
tuT2NcmPF1m3ubnJ8zxiXTQKjoSrq6srKyvoN0IKOs0TzFaZQQd9UgvrotKg
6wx02Ol6luQSo6YnVaDD8YcvqCw6mMuAjnBNZ4SdBV6+VzOyIuiDji5dJDMQ
cxKgZZyMEEOss4Qlp4lWsXNAd+DAAWOMbico18cXPbONjY1Syv3ud79DT3HJ
Gpyb8rct1UXlATl6XEbQjY2NSUFXSCMZ6L5JJSlAh72LOavT6/cPu2Dsi6v5
t8lVXoya3iaLmv4wmYIbAV1iEoJuca5bM0srETnoEguD75L46kuh5clBsjz5
CsMjsIXiMS6Cbktz6WIS+OMGNOEDKOiUrnoRvEDbfH5kenXl8cUm+HB8WHks
kTwlRkAXSe0qCHRImvYYopABuh2iPOyUhYWFn/zkJ4RyR48effLkSWmauktV
FtCxHmiSzrpCbPNZsT2TfU3UAcTi7HPjqVbubEQ7ajoFXb+4MgJ9mB+icbPI
URKHYXAnZoXjiO49S/EkKwFmChjopu3MGNNcuuiLEf5QuM1BQAw16FA5C2KQ
dphCHZgk8y3SY5MaKRh0dtqY2HQfOtY9ndcKEiY90CHTLkteGe4l26r8OmQf
fvghAZ3b7S5BI3e1Sgq6rLUVgzV4ZBu1IxZnM7JbcdSuSEw1QasUyhZLHaXc
CaWrl/jptyaOlwqyhmV/IK0NKdeDiqw0Fl2WRp1h0W2f8h55EgThN7/5zbFj
x9CTW4J27mrtTNAZKq7KCDo16wzQKZQ36JBmZ2enpqa2u4V7QJqgAxPEAN0e
khp0BEGo6/qjH/3oB3JHuB9q+cgpSsiYX5qo8KNDReU5mbVHVQjoDGUpBeji
8bgIuq+++gqB7s9//vMXX3xhgG5XSw90yJwjHw8ePHiAqaqqSm3+Fde9BN1g
5f5KdpAM0JVA5CvVA91f/vIXBLpPPvnEGATYvUJXUw90lZWVYgcTbafpyRa3
6/r555+X+1vZWTJAt93KCDrUdX3//fcfPFDGCTG0W4Soogc61G8VcYS2Eeuk
KdsEOmTUvf322+X+VnaWDNBtt/RA980334igO3r06O9///tyt9RQnkJU+YHW
+n010/QoV3TQodLa2trK/cXsIBmg226pQcfz/PPnzxHovv76awQ6p9NJYv6f
O3eu3I01lLPa29vJXICaaWmwtq2gE1n31ltvIWvTGK9LGqDbfilAt7GxQUC3
vLw8NDT085///A3Ji5yQbWDcmbtC6BqhK4Wul15EprKDTrypDqtUylf27DRJ
XyGk/mYMFVGp19Lhbel8mfTO1LxFDZVdijDCmpTLA3SH810ZkQZ06ltrv0l9
+aS4K3fr9qDUN16uKvcZ7GupL4fm1IMadNIMivyKEgjoss+vTlQ0T/NEpLhW
0FsT6bs6v1oK027b75t9o+w5pvkrbBCvvEp/vXICXUYdLuCdEXo3j+ZJZQOE
vSo16LJ/Qg3lIfXvb/agM1R2ZaRcHqB7owCH4ZxAZ+DusIR4Buu2T+o7U327
GujbsVJDRo9ypQSd3t2S0WotN3LKI6lpd1g1VG6oQGnemZr3asYb2FDppYmX
NOYc0v8DgUjQDg==
    "], {{0, 254}, {419, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{260., Automatic},
  ImageSizeRaw->{419, 254},
  PlotRange->{{0, 419}, {0, 254}}]], "Input",
 Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Select the following metabolite and convert it back to InputForm\
\>", "Subsubexercise",
 CellChangeTimes->{{3.579800031654798*^9, 3.5798000462302723`*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["c",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "c"],
  Editable->False,
  Selectable->False]], "Input",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reactions", "Section",
 CellChangeTimes->{{3.523194182870455*^9, 3.523194184037212*^9}}],

Cell[TextData[{
 "Reactions are defined in the following way (using ",
 ButtonBox["reaction",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/reaction"],
 ")"
}], "Text",
 CellChangeTimes->{{3.523195134552373*^9, 3.5231951453504353`*^9}, {
  3.523195268524001*^9, 3.523195268840847*^9}, {3.5798005962976427`*^9, 
  3.579800615627877*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reaction", "[", 
  RowBox[{"\"\<vpfk\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<f6p\>\"", ",", "\"\<c\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"\"\<adp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<fbp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<h\>\"", ",", "\"\<c\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5231952992839108`*^9, 3.5231953080029*^9}, {
  3.5231953935103292`*^9, 3.523195487998662*^9}, {3.531681647626931*^9, 
  3.531681651874151*^9}}],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["f6p",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["f6p", "c"],
      Editable->False,
      Selectable->False]}], "\[Equilibrium]", 
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["adp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["adp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["fbp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["fbp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["h",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["h", "c"],
      Editable->False,
      Selectable->False]}]}], 
   StyleBox["vpfk",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["vpfk", {
    Toolbox`metabolite["atp", "c"], 
    Toolbox`metabolite["f6p", "c"]}, {
    Toolbox`metabolite["adp", "c"], 
    Toolbox`metabolite["fbp", "c"], 
    Toolbox`metabolite["h", "c"]}, {1, 1, 1, 1, 1}, True],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.579792761628965*^9}]
}, Open  ]],

Cell[TextData[{
 "or in shorthand form (using ",
 ButtonBox["r",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/reaction"],
 ")"
}], "Text",
 CellChangeTimes->{{3.531681682335381*^9, 3.5316816856861353`*^9}, {
  3.579800617903713*^9, 3.579800632064183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "[", 
  RowBox[{"\"\<vpfk\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<f6p\>\"", ",", "\"\<c\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"\"\<adp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<fbp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<h\>\"", ",", "\"\<c\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.531681691427767*^9}],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["f6p",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["f6p", "c"],
      Editable->False,
      Selectable->False]}], "\[Equilibrium]", 
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["adp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["adp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["fbp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["fbp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["h",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["h", "c"],
      Editable->False,
      Selectable->False]}]}], 
   StyleBox["vpfk",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["vpfk", {
    Toolbox`metabolite["atp", "c"], 
    Toolbox`metabolite["f6p", "c"]}, {
    Toolbox`metabolite["adp", "c"], 
    Toolbox`metabolite["fbp", "c"], 
    Toolbox`metabolite["h", "c"]}, {1, 1, 1, 1, 1}, True],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell["\<\
The first position in the arguments list is the reactions\[CloseCurlyQuote]s \
ID, second and third represent substrates and products, respectively, and the \
fourth provides the stoichiometric factors. Reactions are assumed to be \
reversible per default. A boolean, fifth argument has to be provided if one \
wants to define an irreversible reaction (True=reversible, \
False=irreversible).\
\>", "Text",
 CellChangeTimes->{{3.523195518886723*^9, 3.523195641455627*^9}, {
  3.5231956745923223`*^9, 3.523195805298478*^9}, {3.523195887062166*^9, 
  3.52319589871028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "[", 
  RowBox[{"\"\<vpfk\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<f6p\>\"", ",", "\"\<c\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"\"\<adp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<fbp\>\"", ",", "\"\<c\>\""}], "]"}], ",", 
     RowBox[{"m", "[", 
      RowBox[{"\"\<h\>\"", ",", "\"\<c\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.523195661914102*^9, 3.523195663265997*^9}, {
   3.531681656506337*^9, 3.531681660338271*^9}, 3.531681693387285*^9}],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["f6p",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["f6p", "c"],
      Editable->False,
      Selectable->False]}], "\[RightArrow]", 
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["adp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["adp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["fbp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["fbp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["h",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["h", "c"],
      Editable->False,
      Selectable->False]}]}], 
   StyleBox["vpfk",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["vpfk", {
    Toolbox`metabolite["atp", "c"], 
    Toolbox`metabolite["f6p", "c"]}, {
    Toolbox`metabolite["adp", "c"], 
    Toolbox`metabolite["fbp", "c"], 
    Toolbox`metabolite["h", "c"]}, {1, 1, 1, 1, 1}, False],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Furthermore, reactions can be defined using string definitions by \
using the following convention: \[OpenCurlyDoubleQuote]reactionID: \
met_compartment (--> or <=>) met2_compartment + \
\[LineSeparator]met3_compartment \[CloseCurlyDoubleQuote]", "KeyEvent"],
 StyleBox[".", "KeyEvent",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.52319593982305*^9, 3.523196088872918*^9}, {
   3.523197124211629*^9, 3.523197149987905*^9}, {3.5231973233546143`*^9, 
   3.523197357462675*^9}, {3.5231974008160067`*^9, 3.523197425871838*^9}, 
   3.525006887775002*^9, {3.53168170503804*^9, 3.531681718055241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"str2mass", "[", 
  "\"\<vpfk: atp_c + f6p_c <=> adp_c + fbp_c + h_periplasm\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"str2mass", "[", 
  "\"\<vpfk: atp[c] + f6p[c] <=> adp[c] + fbp[c] + h[periplasm]\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"str2mass", "[", 
  "\"\<vpfk: atp_c + f6p_c --> adp_c + fbp_c + h_c\>\"", "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["f6p",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["f6p", "c"],
      Editable->False,
      Selectable->False]}], "\[Equilibrium]", 
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["adp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["adp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["fbp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["fbp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["h",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["periplasm",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["h", "periplasm"],
      Editable->False,
      Selectable->False]}]}], 
   StyleBox["vpfk",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["vpfk", {
    Toolbox`metabolite["atp", "c"], 
    Toolbox`metabolite["f6p", "c"]}, {
    Toolbox`metabolite["adp", "c"], 
    Toolbox`metabolite["fbp", "c"], 
    Toolbox`metabolite["h", "periplasm"]}, {1, 1, 1, 1, 1}, True],
  Editable->False,
  Selectable->False]], "Output"],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["f6p",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["f6p", "c"],
      Editable->False,
      Selectable->False]}], "\[Equilibrium]", 
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["adp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["adp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["fbp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["fbp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["h",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["periplasm",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["h", "periplasm"],
      Editable->False,
      Selectable->False]}]}], 
   StyleBox["vpfk",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["vpfk", {
    Toolbox`metabolite["atp", "c"], 
    Toolbox`metabolite["f6p", "c"]}, {
    Toolbox`metabolite["adp", "c"], 
    Toolbox`metabolite["fbp", "c"], 
    Toolbox`metabolite["h", "periplasm"]}, {1, 1, 1, 1, 1}, True],
  Editable->False,
  Selectable->False]], "Output"],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["f6p",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["f6p", "c"],
      Editable->False,
      Selectable->False]}], "\[RightArrow]", 
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["adp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["adp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["fbp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["fbp", "c"],
      Editable->False,
      Selectable->False], "+", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["h",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["h", "c"],
      Editable->False,
      Selectable->False]}]}], 
   StyleBox["vpfk",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["vpfk", {
    Toolbox`metabolite["atp", "c"], 
    Toolbox`metabolite["f6p", "c"]}, {
    Toolbox`metabolite["adp", "c"], 
    Toolbox`metabolite["fbp", "c"], 
    Toolbox`metabolite["h", "c"]}, {1, 1, 1, 1, 1}, False],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell["\<\
Exchange reactions or sinks can be specified by either leaving the substrates \
or products list empty, e.g.,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "[", 
  RowBox[{"\"\<EX_atp\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"m", "[", 
     RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "True"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    InterpretationBox[
     SuperscriptBox[
      StyleBox["atp",
       StripOnInput->False,
       ShowSyntaxStyles->False,
       AutoSpacing->False,
       ZeroWidthTimes->True,
       LineColor->RGBColor[0, 0, 0],
       FrontFaceColor->RGBColor[0, 0, 0],
       BackFaceColor->RGBColor[0, 0, 0],
       GraphicsColor->RGBColor[0, 0, 0],
       FontColor->RGBColor[0, 0, 0]], 
      StyleBox["c",
       StripOnInput->False,
       ShowSyntaxStyles->False,
       AutoSpacing->False,
       ZeroWidthTimes->True,
       LineColor->RGBColor[0, 0, 0],
       FrontFaceColor->RGBColor[0, 0, 0],
       BackFaceColor->RGBColor[0, 0, 0],
       GraphicsColor->RGBColor[0, 0, 0],
       FontColor->RGBColor[0, 0, 0]]],
     Toolbox`metabolite["atp", "c"],
     Editable->False,
     Selectable->False], "\[Equilibrium]", 
    StyleBox["\[EmptySet]",
     StripOnInput->False,
     LineColor->GrayLevel[0],
     FrontFaceColor->GrayLevel[0],
     BackFaceColor->GrayLevel[0],
     GraphicsColor->GrayLevel[0],
     FontColor->GrayLevel[0]]}], 
   StyleBox["EX_atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["EX_atp", {
    Toolbox`metabolite["atp", "c"]}, {}, {1}, True],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell["\<\
or by indicating a sink with \
\[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote], e.g.,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"str2mass", "[", "\"\<EX_atp: atp[c] <=> 0\>\"", "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  OverscriptBox[
   RowBox[{
    InterpretationBox[
     SuperscriptBox[
      StyleBox["atp",
       StripOnInput->False,
       ShowSyntaxStyles->False,
       AutoSpacing->False,
       ZeroWidthTimes->True,
       LineColor->RGBColor[0, 0, 0],
       FrontFaceColor->RGBColor[0, 0, 0],
       BackFaceColor->RGBColor[0, 0, 0],
       GraphicsColor->RGBColor[0, 0, 0],
       FontColor->RGBColor[0, 0, 0]], 
      StyleBox["c",
       StripOnInput->False,
       ShowSyntaxStyles->False,
       AutoSpacing->False,
       ZeroWidthTimes->True,
       LineColor->RGBColor[0, 0, 0],
       FrontFaceColor->RGBColor[0, 0, 0],
       BackFaceColor->RGBColor[0, 0, 0],
       GraphicsColor->RGBColor[0, 0, 0],
       FontColor->RGBColor[0, 0, 0]]],
     Toolbox`metabolite["atp", "c"],
     Editable->False,
     Selectable->False], "\[Equilibrium]", 
    StyleBox["\[EmptySet]",
     StripOnInput->False,
     LineColor->GrayLevel[0],
     FrontFaceColor->GrayLevel[0],
     BackFaceColor->GrayLevel[0],
     GraphicsColor->GrayLevel[0],
     FontColor->GrayLevel[0]]}], 
   StyleBox["EX_atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`reaction["EX_atp", {
    Toolbox`metabolite["atp", "c"]}, {}, {1}, True],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Write out the following reaction: L-Malate + NAD \[RightArrow] Oxaloacetate + \
NADH\
\>", "Subsubexercise",
 CellChangeTimes->{{3.579800031654798*^9, 3.5798000462302723`*^9}, {
   3.5798003518272543`*^9, 3.579800398768469*^9}, {3.579800484052005*^9, 
   3.579800500911429*^9}, 3.5798685111943827`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Put", " ", "your", " ", "code", " ", "here"}], "*)"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.579800339660986*^9, 3.5798003453312197`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluxes", "Section"],

Cell[TextData[{
 "A flux of a reaction is specified using the ",
 ButtonBox["v",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/v"],
 " expression."
}], "Text",
 CellChangeTimes->{{3.5798005305950747`*^9, 3.579800581724738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", "\"\<vtpi\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.579800538530323*^9, 3.5798005489781923`*^9}}],

Cell[BoxData[
 InterpretationBox[
  SubscriptBox[
   StyleBox["v",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`v["vtpi"],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.579800541270059*^9, 3.579800549515016*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.523196108097312*^9, 3.52319611157587*^9}}],

Cell[CellGroupData[{

Cell["Equilibrium constants", "Subsubsection",
 CellChangeTimes->{{3.5231961147049847`*^9, 3.5231961203522367`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keq", "[", "\"\<vtpi\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.523196238638682*^9, 3.52319624469162*^9}}],

Cell[BoxData[
 InterpretationBox[
  UnderscriptBox["K", 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`Keq["vtpi"],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"str2mass", "[", "\"\<Keq_vtpi\>\"", "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  UnderscriptBox["K", 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`Keq["vtpi"],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rate constants", "Subsubsection",
 CellChangeTimes->{{3.5231961238399897`*^9, 3.523196127408225*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rateconst", "[", 
  RowBox[{"\"\<vtpi\>\"", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.523196217386656*^9, 3.523196229203581*^9}}],

Cell[BoxData[
 InterpretationBox[
  SubsuperscriptBox["k", 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], "\[LongRightArrow]"],
  Toolbox`rateconst["vtpi", True],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rateconst", "[", 
  RowBox[{"\"\<vtpi\>\"", ",", " ", "True"}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  SubsuperscriptBox["k", 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], "\[LongRightArrow]"],
  Toolbox`rateconst["vtpi", True],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rateconst", "[", 
  RowBox[{"\"\<vtpi\>\"", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.523196217386656*^9, 3.5231962358357964`*^9}}],

Cell[BoxData[
 InterpretationBox[
  SubsuperscriptBox["k", 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], "\[LongLeftArrow]"],
  Toolbox`rateconst["vtpi", False],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fixed external concentrations", "Subsubsection",
 CellChangeTimes->{{3.5231961361288347`*^9, 3.5231961450885468`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolite", "[", 
  RowBox[{"\"\<atp\>\"", ",", "\"\<Xt\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.5231962044928713`*^9, 3.523196209579121*^9}}],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   StyleBox["atp",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["Xt",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`metabolite["atp", "Xt"],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arbitrary parameters", "Subsubsection",
 CellChangeTimes->{{3.523196148344906*^9, 3.5231961536247797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameter", "[", "\"\<Param\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5231961569185762`*^9, 3.523196164290587*^9}, {
  3.523196199331238*^9, 3.523196200210944*^9}, {3.523196259988371*^9, 
  3.523196260676498*^9}}],

Cell[BoxData[
 InterpretationBox[
  UnderscriptBox[
   StyleBox["Param",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["Global",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`parameter["Param"],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameter", "[", 
  RowBox[{"\"\<Param\>\"", ",", "\"\<vtpi\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.523196174306388*^9, 3.523196194707294*^9}, {
  3.523196263668432*^9, 3.523196264548273*^9}}],

Cell[BoxData[
 InterpretationBox[
  UnderscriptBox[
   StyleBox["Param",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]], 
   StyleBox["vtpi",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    LineColor->RGBColor[0, 0, 0],
    FrontFaceColor->RGBColor[0, 0, 0],
    BackFaceColor->RGBColor[0, 0, 0],
    GraphicsColor->RGBColor[0, 0, 0],
    FontColor->RGBColor[0, 0, 0]]],
  Toolbox`parameter["Param", "vtpi"],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  InterpretationBox[
   UnderscriptBox[
    StyleBox["Param",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]], 
    StyleBox["vtpi",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`parameter["Param", "vtpi"],
   Editable->False,
   Selectable->False], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"parameter", "[", 
    RowBox[{"\"\<Param\>\"", ",", "\"\<vtpi\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Type related functions", "Section",
 CellChangeTimes->{{3.579792954072287*^9, 3.579792955424438*^9}, {
  3.579800683057701*^9, 3.5798006835759*^9}}],

Cell[TextData[{
 ButtonBox["Keq",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/Keq"],
 ", ",
 ButtonBox["metabolite",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/metabolite"],
 ", ",
 ButtonBox["reaction",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/reaction"],
 ", ",
 ButtonBox["rateconst",
  BaseStyle->"Hyperlink",
  ButtonData->{"rateconst", None}],
 ", etc. implement a series of functions, e.g., ",
 ButtonBox["getID",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/getID"],
 ", ",
 ButtonBox["getCompartment",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/getCompartment"],
 ", ",
 ButtonBox["reversibleQ",
  BaseStyle->"Link",
  ButtonData->"paclet:Toolbox/ref/reversibleQ"],
 " etc.,"
}], "Text",
 CellChangeTimes->{{3.579800705766016*^9, 3.579800721560947*^9}, {
  3.57980075471038*^9, 3.579800795018221*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getID", "[", 
  InterpretationBox[
   UnderscriptBox["K", 
    StyleBox["vtpi",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`Keq["vtpi"],
   Editable->False,
   Selectable->False], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getID", "[", 
  InterpretationBox[
   OverscriptBox[
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "\[Equilibrium]", 
     StyleBox["\[EmptySet]",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]]}], 
    StyleBox["EX_atp",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`reaction["EX_atp", {
     Toolbox`metabolite["atp", "c"]}, {}, {1}, True],
   Editable->False,
   Selectable->False], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getID", "[", 
  InterpretationBox[
   SuperscriptBox[
    StyleBox["atp",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]], 
    StyleBox["Xt",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`metabolite["atp", "Xt"],
   Editable->False,
   Selectable->False], "]"}]}], "Input",
 CellChangeTimes->{3.579800810438197*^9}],

Cell[BoxData["\<\"vtpi\"\>"], "Output"],

Cell[BoxData["\<\"EX_atp\"\>"], "Output"],

Cell[BoxData["\<\"atp\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"reversibleQ", "[", 
  InterpretationBox[
   OverscriptBox[
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "\[Equilibrium]", 
     StyleBox["\[EmptySet]",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]]}], 
    StyleBox["EX_atp",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`reaction["EX_atp", {
     Toolbox`metabolite["atp", "c"]}, {}, {1}, True],
   Editable->False,
   Selectable->False], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getCompartment", "[", 
  InterpretationBox[
   OverscriptBox[
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False], "\[Equilibrium]", 
     StyleBox["\[EmptySet]",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]]}], 
    StyleBox["EX_atp",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`reaction["EX_atp", {
     Toolbox`metabolite["atp", "c"]}, {}, {1}, True],
   Editable->False,
   Selectable->False], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getCompartment", "[", 
  InterpretationBox[
   OverscriptBox[
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["compartment1",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "compartment1"],
      Editable->False,
      Selectable->False], "\[Equilibrium]", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["compartment2",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "compartment2"],
      Editable->False,
      Selectable->False]}], 
    StyleBox["Translocation",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`reaction["Translocation", {
     Toolbox`metabolite["atp", "compartment1"]}, {
     Toolbox`metabolite["atp", "compartment2"]}, {1, 1}, True],
   Editable->False,
   Selectable->False], "]"}]}], "Input"],

Cell[BoxData["True"], "Output"],

Cell[BoxData["\<\"c\"\>"], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"compartment1\"\>", ",", "\<\"compartment2\"\>"}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["String representations", "Section"],

Cell[TextData[{
 ButtonBox["ToString",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ToString"],
 " has been overloaded with respect to the data types, e.g."
}], "Text",
 CellChangeTimes->{{3.5798008346838417`*^9, 3.579800834685931*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", 
  InterpretationBox[
   UnderscriptBox["K", 
    StyleBox["vtpi",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`Keq["vtpi"],
   Editable->False,
   Selectable->False], "]"}]], "Input"],

Cell[BoxData["\<\"Keq_vtpi\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", 
  InterpretationBox[
   OverscriptBox[
    RowBox[{
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["compartment1",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "compartment1"],
      Editable->False,
      Selectable->False], "\[Equilibrium]", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["compartment2",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "compartment2"],
      Editable->False,
      Selectable->False]}], 
    StyleBox["Translocation",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     LineColor->RGBColor[0, 0, 0],
     FrontFaceColor->RGBColor[0, 0, 0],
     BackFaceColor->RGBColor[0, 0, 0],
     GraphicsColor->RGBColor[0, 0, 0],
     FontColor->RGBColor[0, 0, 0]]],
   Toolbox`reaction["Translocation", {
     Toolbox`metabolite["atp", "compartment1"]}, {
     Toolbox`metabolite["atp", "compartment2"]}, {1, 1}, True],
   Editable->False,
   Selectable->False], "]"}]], "Input"],

Cell[BoxData["\<\"Translocation: atp[compartment1] <=> \
atp[compartment2]\"\>"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More data types ...", "Section"],

Cell[CellGroupData[{

Cell["Enzymes", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"enz", "=", 
  RowBox[{"enzyme", "[", 
   RowBox[{
    RowBox[{"\"\<ID\>\"", "\[Rule]", "\"\<PFK\>\""}], ",", 
    RowBox[{"\"\<Compartment\>\"", "\[Rule]", "\"\<c\>\""}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  UnderoverscriptBox[
   StyleBox[
    SuperscriptBox["PFK", "c"],
    Background->RGBColor[0.9, 0.9, 0.9]], "", ""],
  Toolbox`enzyme[{
   "ID" -> "PFK", "Compartment" -> "c", "BoundCatalytic" -> {}, 
    "BoundActivators" -> {}, "BoundInhibitors" -> {}, "CatalyticSites" -> 
    DirectedInfinity[1], "ActivationSites" -> DirectedInfinity[1], 
    "InhibitionSites" -> DirectedInfinity[1]}],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bindActivator", "[", 
  RowBox[{"enz", ",", 
   RowBox[{"m", "[", 
    RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"bindInhibitor", "[", 
  RowBox[{"enz", ",", 
   RowBox[{"m", "[", 
    RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"bindCatalytic", "[", 
  RowBox[{"enz", ",", 
   RowBox[{"m", "[", 
    RowBox[{"\"\<atp\>\"", ",", "\"\<c\>\""}], "]"}]}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  UnderoverscriptBox[
   StyleBox[
    SuperscriptBox["PFK", "c"],
    Background->RGBColor[0.9, 0.9, 0.9]], "", 
   InterpretationBox[
    SuperscriptBox[
     StyleBox["atp",
      StripOnInput->False,
      ShowSyntaxStyles->False,
      AutoSpacing->False,
      ZeroWidthTimes->True,
      LineColor->RGBColor[0, 2/3, 0],
      FrontFaceColor->RGBColor[0, 2/3, 0],
      BackFaceColor->RGBColor[0, 2/3, 0],
      GraphicsColor->RGBColor[0, 2/3, 0],
      FontColor->RGBColor[0, 2/3, 0]], 
     StyleBox["c",
      StripOnInput->False,
      ShowSyntaxStyles->False,
      AutoSpacing->False,
      ZeroWidthTimes->True,
      LineColor->RGBColor[0, 2/3, 0],
      FrontFaceColor->RGBColor[0, 2/3, 0],
      BackFaceColor->RGBColor[0, 2/3, 0],
      GraphicsColor->RGBColor[0, 2/3, 0],
      FontColor->RGBColor[0, 2/3, 0]]],
    Toolbox`metabolite["atp", "c"],
    Editable->False,
    Selectable->False]],
  Toolbox`enzyme[{
   "ID" -> "PFK", "Compartment" -> "c", "BoundCatalytic" -> {}, 
    "BoundActivators" -> {
      Toolbox`Private`wrap[Toolbox`metabolite]["atp", "c"]}, 
    "BoundInhibitors" -> {}, "CatalyticSites" -> DirectedInfinity[1], 
    "ActivationSites" -> DirectedInfinity[1], "InhibitionSites" -> 
    DirectedInfinity[1]}],
  Editable->False,
  Selectable->False]], "Output"],

Cell[BoxData[
 InterpretationBox[
  UnderoverscriptBox[
   StyleBox[
    SuperscriptBox["PFK", "c"],
    Background->RGBColor[0.9, 0.9, 0.9]], 
   InterpretationBox[
    SuperscriptBox[
     StyleBox["atp",
      StripOnInput->False,
      ShowSyntaxStyles->False,
      AutoSpacing->False,
      ZeroWidthTimes->True,
      LineColor->RGBColor[2/3, 0, 0],
      FrontFaceColor->RGBColor[2/3, 0, 0],
      BackFaceColor->RGBColor[2/3, 0, 0],
      GraphicsColor->RGBColor[2/3, 0, 0],
      FontColor->RGBColor[2/3, 0, 0]], 
     StyleBox["c",
      StripOnInput->False,
      ShowSyntaxStyles->False,
      AutoSpacing->False,
      ZeroWidthTimes->True,
      LineColor->RGBColor[2/3, 0, 0],
      FrontFaceColor->RGBColor[2/3, 0, 0],
      BackFaceColor->RGBColor[2/3, 0, 0],
      GraphicsColor->RGBColor[2/3, 0, 0],
      FontColor->RGBColor[2/3, 0, 0]]],
    Toolbox`metabolite["atp", "c"],
    Editable->False,
    Selectable->False], ""],
  Toolbox`enzyme[{
   "ID" -> "PFK", "Compartment" -> "c", "BoundCatalytic" -> {}, 
    "BoundActivators" -> {}, "BoundInhibitors" -> {
      Toolbox`Private`wrap[Toolbox`metabolite]["atp", "c"]}, "CatalyticSites" -> 
    DirectedInfinity[1], "ActivationSites" -> DirectedInfinity[1], 
    "InhibitionSites" -> DirectedInfinity[1]}],
  Editable->False,
  Selectable->False]], "Output"],

Cell[BoxData[
 InterpretationBox[
  UnderoverscriptBox[
   StyleBox[
    RowBox[{
     SuperscriptBox["PFK", "c"], "&", 
     InterpretationBox[
      SuperscriptBox[
       StyleBox["atp",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["c",
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        LineColor->RGBColor[0, 0, 0],
        FrontFaceColor->RGBColor[0, 0, 0],
        BackFaceColor->RGBColor[0, 0, 0],
        GraphicsColor->RGBColor[0, 0, 0],
        FontColor->RGBColor[0, 0, 0]]],
      Toolbox`metabolite["atp", "c"],
      Editable->False,
      Selectable->False]}],
    Background->RGBColor[0.9, 0.9, 0.9]], "", ""],
  Toolbox`enzyme[{"ID" -> "PFK", "Compartment" -> "c", "BoundCatalytic" -> {
      Toolbox`Private`wrap[Toolbox`metabolite]["atp", "c"]}, 
    "BoundActivators" -> {}, "BoundInhibitors" -> {}, "CatalyticSites" -> 
    DirectedInfinity[1], "ActivationSites" -> DirectedInfinity[1], 
    "InhibitionSites" -> DirectedInfinity[1]}],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell["\<\
See ???.nb for a detailed introduction into enzymes and regulatory modules\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Genes, proteins and complexes", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gene", "[", "\"\<b3916\>\"", "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox["b3916"],
   StripOnInput->False,
   ShowSyntaxStyles->False,
   AutoSpacing->False,
   ZeroWidthTimes->True,
   Background->RGBColor[0, 1, 1]],
  Toolbox`gene["b3916", None],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"protein", "[", "\"\<PfkA\>\"", "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox["PfkA"],
   StripOnInput->False,
   ShowSyntaxStyles->False,
   AutoSpacing->False,
   ZeroWidthTimes->True,
   Background->RGBColor[1, 0.5, 0]],
  Toolbox`protein["PfkA", None],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneComplex", "[", 
  RowBox[{
   RowBox[{"gene", "[", "\"\<b0902\>\"", "]"}], ",", 
   RowBox[{"gene", "[", "\"\<b0903\>\"", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[
   FrameBox[GridBox[{
      {
       InterpretationBox[
        StyleBox[
         FrameBox["b0902"],
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         Background->RGBColor[0, 1, 1]],
        Toolbox`gene["b0902", None],
        Editable->False,
        Selectable->False], 
       InterpretationBox[
        StyleBox[
         FrameBox["b0903"],
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         Background->RGBColor[0, 1, 1]],
        Toolbox`gene["b0903", None],
        Editable->False,
        Selectable->False]}
     }]],
   Toolbox`geneComplex[
    Toolbox`gene["b0902", None], 
    Toolbox`gene["b0903", None]],
   Editable->False,
   Selectable->False],
  Background->GrayLevel[0.85]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinComplex", "[", 
  RowBox[{
   RowBox[{"protein", "[", "\"\<PflBec\>\"", "]"}], ",", 
   RowBox[{"protein", "[", "\"\<YfiD\>\"", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[
   FrameBox[GridBox[{
      {
       InterpretationBox[
        StyleBox[
         FrameBox["PflBec"],
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         Background->RGBColor[1, 0.5, 0]],
        Toolbox`protein["PflBec", None],
        Editable->False,
        Selectable->False], 
       InterpretationBox[
        StyleBox[
         FrameBox["YfiD"],
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         Background->RGBColor[1, 0.5, 0]],
        Toolbox`protein["YfiD", None],
        Editable->False,
        Selectable->False]}
     }]],
   Toolbox`proteinComplex[
    Toolbox`protein["PflBec", None], 
    Toolbox`protein["YfiD", None]],
   Editable->False,
   Selectable->False],
  Background->GrayLevel[0.85]]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gpr", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["PflBec"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[1, 0.5, 0]],
             Toolbox`protein["PflBec"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["YfiD"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[1, 0.5, 0]],
             Toolbox`protein["YfiD"]]}
          }]],
        Toolbox`proteinComplex[
         Toolbox`protein["PflBec"], 
         Toolbox`protein["YfiD"]]],
       Background->GrayLevel[0.85]], "\[Rule]", "\"\<PFL\>\""}], ",", 
     RowBox[{
      InterpretationBox[
       StyleBox[
        FrameBox["PflBec"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[1, 0.5, 0]],
       Toolbox`protein["PflBec"]], "\[Rule]", "\"\<PFL\>\""}], ",", 
     RowBox[{
      InterpretationBox[
       StyleBox[
        FrameBox["TdcEec"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[1, 0.5, 0]],
       Toolbox`protein["TdcEec"]], "\[Rule]", "\"\<PFL\>\""}], ",", 
     RowBox[{
      InterpretationBox[
       StyleBox[
        FrameBox["PflDec"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[1, 0.5, 0]],
       Toolbox`protein["PflDec"]], "\[Rule]", "\"\<PFL\>\""}], ",", 
     RowBox[{
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["b0902"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b0902"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["b0903"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b0903"]]}
          }]],
        Toolbox`geneComplex[
         Toolbox`gene["b0902"], 
         Toolbox`gene["b0903"]]],
       Background->GrayLevel[0.85]], "\[Rule]", 
      InterpretationBox[
       StyleBox[
        FrameBox["PflBec"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[1, 0.5, 0]],
       Toolbox`protein["PflBec"]]}], ",", 
     RowBox[{
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["b3951"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b3951"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["b3952"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b3952"]]}
          }]],
        Toolbox`geneComplex[
         Toolbox`gene["b3951"], 
         Toolbox`gene["b3952"]]],
       Background->GrayLevel[0.85]], "\[Rule]", 
      InterpretationBox[
       StyleBox[
        FrameBox["PflDec"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[1, 0.5, 0]],
       Toolbox`protein["PflDec"]]}], ",", 
     RowBox[{
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["b0902"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b0902"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["b3114"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b3114"]]}
          }]],
        Toolbox`geneComplex[
         Toolbox`gene["b0902"], 
         Toolbox`gene["b3114"]]],
       Background->GrayLevel[0.85]], "\[Rule]", 
      InterpretationBox[
       StyleBox[
        FrameBox["TdcEec"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[1, 0.5, 0]],
       Toolbox`protein["TdcEec"]]}], ",", 
     RowBox[{
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["b0902"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b0902"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["b0903"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[0, 1, 1]],
             Toolbox`gene["b0903"]]}
          }]],
        Toolbox`geneComplex[
         Toolbox`gene["b0902"], 
         Toolbox`gene["b0903"]]],
       Background->GrayLevel[0.85]], "\[Rule]", 
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["PflBec"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[1, 0.5, 0]],
             Toolbox`protein["PflBec"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["YfiD"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[1, 0.5, 0]],
             Toolbox`protein["YfiD"]]}
          }]],
        Toolbox`proteinComplex[
         Toolbox`protein["PflBec"], 
         Toolbox`protein["YfiD"]]],
       Background->GrayLevel[0.85]]}], ",", 
     RowBox[{
      InterpretationBox[
       StyleBox[
        FrameBox["b2579"],
        StripOnInput->False,
        ShowSyntaxStyles->False,
        AutoSpacing->False,
        ZeroWidthTimes->True,
        Background->RGBColor[0, 1, 1]],
       Toolbox`gene["b2579"]], "\[Rule]", 
      StyleBox[
       InterpretationBox[
        FrameBox[GridBox[{
           {
            InterpretationBox[
             StyleBox[
              FrameBox["PflBec"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[1, 0.5, 0]],
             Toolbox`protein["PflBec"]], 
            InterpretationBox[
             StyleBox[
              FrameBox["YfiD"],
              StripOnInput->False,
              ShowSyntaxStyles->False,
              AutoSpacing->False,
              ZeroWidthTimes->True,
              Background->RGBColor[1, 0.5, 0]],
             Toolbox`protein["YfiD"]]}
          }]],
        Toolbox`proteinComplex[
         Toolbox`protein["PflBec"], 
         Toolbox`protein["YfiD"]]],
       Background->GrayLevel[0.85]]}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"visualizeGPR", "[", "gpr", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsGroupBox[{
     GraphicsComplexBox[{{0., 1.}, {2., 0.}, {1., 1.}, {2., 1.}, {3., 1.}, {
      1., 2.}, {3., 2.}, {2., 2.}, {0., 2.}}, 
      {GrayLevel[0], 
       LineBox[{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 3}, {6, 1}, {7, 5}, {8, 
        4}, {9, 1}}]},
      ContentSelectable->Automatic], 
     {GrayLevel[0], InsetBox[
       TagBox[
        FormBox[
         StyleBox[
          InterpretationBox[
           FrameBox[GridBox[{
              {
               InterpretationBox[
                StyleBox[
                 FrameBox["PflBec"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[1, 0.5, 0]],
                Toolbox`protein["PflBec", None],
                Editable->False,
                Selectable->False], 
               InterpretationBox[
                StyleBox[
                 FrameBox["YfiD"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[1, 0.5, 0]],
                Toolbox`protein["YfiD", None],
                Editable->False,
                Selectable->False]}
             }]],
           Toolbox`proteinComplex[
            Toolbox`protein["PflBec", None], 
            Toolbox`protein["YfiD", None]],
           Editable->False,
           Selectable->False],
          Background->GrayLevel[0.85]],
         StandardForm],
        StandardForm,
        Editable->True], {0., 1.}], InsetBox[
       StyleBox[
        FrameBox["\<\"PFL\"\>",
         StripOnInput->False],
        StripOnInput->False,
        FontColor->GrayLevel[0],
        Background->RGBColor[0.94, 0.88, 0.94]], {2., 0.}], InsetBox[
       TagBox[
        FormBox[
         InterpretationBox[
          StyleBox[
           FrameBox["PflBec"],
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           Background->RGBColor[1, 0.5, 0]],
          Toolbox`protein["PflBec", None],
          Editable->False,
          Selectable->False],
         StandardForm],
        StandardForm,
        Editable->True], {1., 1.}], InsetBox[
       TagBox[
        FormBox[
         InterpretationBox[
          StyleBox[
           FrameBox["TdcEec"],
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           Background->RGBColor[1, 0.5, 0]],
          Toolbox`protein["TdcEec", None],
          Editable->False,
          Selectable->False],
         StandardForm],
        StandardForm,
        Editable->True], {2., 1.}], InsetBox[
       TagBox[
        FormBox[
         InterpretationBox[
          StyleBox[
           FrameBox["PflDec"],
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           Background->RGBColor[1, 0.5, 0]],
          Toolbox`protein["PflDec", None],
          Editable->False,
          Selectable->False],
         StandardForm],
        StandardForm,
        Editable->True], {3., 1.}], InsetBox[
       TagBox[
        FormBox[
         StyleBox[
          InterpretationBox[
           FrameBox[GridBox[{
              {
               InterpretationBox[
                StyleBox[
                 FrameBox["b0902"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[0, 1, 1]],
                Toolbox`gene["b0902", None],
                Editable->False,
                Selectable->False], 
               InterpretationBox[
                StyleBox[
                 FrameBox["b0903"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[0, 1, 1]],
                Toolbox`gene["b0903", None],
                Editable->False,
                Selectable->False]}
             }]],
           Toolbox`geneComplex[
            Toolbox`gene["b0902", None], 
            Toolbox`gene["b0903", None]],
           Editable->False,
           Selectable->False],
          Background->GrayLevel[0.85]],
         StandardForm],
        StandardForm,
        Editable->True], {1., 2.}], InsetBox[
       TagBox[
        FormBox[
         StyleBox[
          InterpretationBox[
           FrameBox[GridBox[{
              {
               InterpretationBox[
                StyleBox[
                 FrameBox["b3951"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[0, 1, 1]],
                Toolbox`gene["b3951", None],
                Editable->False,
                Selectable->False], 
               InterpretationBox[
                StyleBox[
                 FrameBox["b3952"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[0, 1, 1]],
                Toolbox`gene["b3952", None],
                Editable->False,
                Selectable->False]}
             }]],
           Toolbox`geneComplex[
            Toolbox`gene["b3951", None], 
            Toolbox`gene["b3952", None]],
           Editable->False,
           Selectable->False],
          Background->GrayLevel[0.85]],
         StandardForm],
        StandardForm,
        Editable->True], {3., 2.}], InsetBox[
       TagBox[
        FormBox[
         StyleBox[
          InterpretationBox[
           FrameBox[GridBox[{
              {
               InterpretationBox[
                StyleBox[
                 FrameBox["b0902"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[0, 1, 1]],
                Toolbox`gene["b0902", None],
                Editable->False,
                Selectable->False], 
               InterpretationBox[
                StyleBox[
                 FrameBox["b3114"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 AutoSpacing->False,
                 ZeroWidthTimes->True,
                 Background->RGBColor[0, 1, 1]],
                Toolbox`gene["b3114", None],
                Editable->False,
                Selectable->False]}
             }]],
           Toolbox`geneComplex[
            Toolbox`gene["b0902", None], 
            Toolbox`gene["b3114", None]],
           Editable->False,
           Selectable->False],
          Background->GrayLevel[0.85]],
         StandardForm],
        StandardForm,
        Editable->True], {2., 2.}], InsetBox[
       TagBox[
        FormBox[
         InterpretationBox[
          StyleBox[
           FrameBox["b2579"],
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           Background->RGBColor[0, 1, 1]],
          Toolbox`gene["b2579", None],
          Editable->False,
          Selectable->False],
         StandardForm],
        StandardForm,
        Editable->True], {0., 2.}]}},
    ContentSelectable->True],
   Annotation[#, 
    VertexCoordinateRules -> {{0., 1.}, {2., 0.}, {1., 1.}, {2., 1.}, {3., 
     1.}, {1., 2.}, {3., 2.}, {2., 2.}, {0., 2.}}]& ],
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->{{800}, {300}},
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Scaled[0.1],
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complex", "Subsection",
 CellChangeTimes->{{3.579792992662125*^9, 3.579792993718718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmplx", "=", 
  RowBox[{"complex", "[", 
   RowBox[{
    RowBox[{"m", "[", "\"\<Mg+\>\"", "]"}], ",", 
    RowBox[{"m", "[", "\"\<ATP\>\"", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5797929962452097`*^9, 3.579793035262586*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     InterpretationBox[
      StyleBox[
       RowBox[{"Mg", "+"}],
       StripOnInput->False,
       ShowSyntaxStyles->False,
       AutoSpacing->False,
       ZeroWidthTimes->True,
       LineColor->RGBColor[0, 0, 0],
       FrontFaceColor->RGBColor[0, 0, 0],
       BackFaceColor->RGBColor[0, 0, 0],
       GraphicsColor->RGBColor[0, 0, 0],
       FontColor->RGBColor[0, 0, 0]],
      Toolbox`metabolite["Mg+", None],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      StyleBox["ATP",
       StripOnInput->False,
       ShowSyntaxStyles->False,
       AutoSpacing->False,
       ZeroWidthTimes->True,
       LineColor->RGBColor[0, 0, 0],
       FrontFaceColor->RGBColor[0, 0, 0],
       BackFaceColor->RGBColor[0, 0, 0],
       GraphicsColor->RGBColor[0, 0, 0],
       FontColor->RGBColor[0, 0, 0]],
      Toolbox`metabolite["ATP", None],
      Editable->False,
      Selectable->False]}
   },
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}}],
  Toolbox`complex[
   Toolbox`metabolite["Mg+", None], 
   Toolbox`metabolite["ATP", None]],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.5797930206174517`*^9, 3.5797930360984898`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getID", "[", "cmplx", "]"}]], "Input",
 CellChangeTimes->{{3.5797930370707693`*^9, 3.579793039286767*^9}}],

Cell[BoxData["\<\"Mg+ & ATP\"\>"], "Output",
 CellChangeTimes->{3.579793039667618*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excercises", "Exercise"],

Cell["\<\
1. Use the function FilterRules to plot a subset of the concentration profiles\
\>", "Subexercise"],

Cell["2. Import another SBML model of your choice and analyze it", \
"Subexercise"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 852},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Section", "Subsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], ShowGroupOpener -> True, MenuSortingValue -> 
          1250, MenuCommandKey -> "4", FontSize -> 24], 
         Cell[
          StyleData["Section", "Presentation"], 
          CellMargins -> {{67, 10}, {12, 51}}], 
         Cell[
          StyleData["Section", "Condensed"], 
          CellMargins -> {{27, Inherited}, {6, 12}}], 
         Cell[
          StyleData["Section", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{0, 0}, {7, 22}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{48, Inherited}, {8, 12}}, MenuSortingValue -> 
          1300, MenuCommandKey -> "5"], 
         Cell[
          StyleData["Subsection", "Presentation"], 
          CellMargins -> {{100, 10}, {12, 18}}], 
         Cell[
          StyleData["Subsection", "Condensed"], 
          CellMargins -> {{27, Inherited}, {6, 12}}], 
         Cell[
          StyleData["Subsection", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{21, 0}, {7, 22}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{60, Inherited}, {2, 10}}, MenuSortingValue -> 
          1350, MenuCommandKey -> "6", FontSlant -> "Italic"], 
         Cell[
          StyleData["Subsubsection", "Presentation"], 
          CellMargins -> {{100, 10}, {3, 15}}], 
         Cell[
          StyleData["Subsubsection", "Condensed"], 
          CellMargins -> {{27, Inherited}, {6, 12}}], 
         Cell[
          StyleData["Subsubsection", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{40, 0}, {7, 14}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{92, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Subsubsubsection", "Presentation"], 
          CellMargins -> {{115, 10}, {3, 15}}, LineSpacing -> {1, 0}], 
         Cell[
          StyleData["Subsubsubsection", "Condensed"], 
          CellMargins -> {{27, Inherited}, {6, 12}}], 
         Cell[
          StyleData["Subsubsubsection", "Printout"], ShowGroupOpener -> False,
           CellMargins -> {{40, 0}, {7, 14}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsubsubsection"], CellDingbat -> None, 
          ShowGroupOpener -> True, 
          CellMargins -> {{112, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Subsubsubsubsection", "Presentation"], 
          CellMargins -> {{115, 10}, {3, 15}}, LineSpacing -> {1, 0}], 
         Cell[
          StyleData["Subsubsubsubsection", "Condensed"], 
          CellMargins -> {{27, Inherited}, {6, 12}}], 
         Cell[
          StyleData["Subsubsubsubsection", "Printout"], ShowGroupOpener -> 
          False, CellMargins -> {{40, 0}, {7, 14}}], 
         Cell[
          BoxData[
           RowBox[{"Cell", "[", 
             RowBox[{
               RowBox[{"StyleData", "[", "\"Section\"", "]"}], ",", "\n", " ", 
               RowBox[{"CellFrame", "->", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", "\n",
                " ", 
               RowBox[{"CellMargins", "->", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"27", ",", " ", "Inherited"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", " ", "34"}], "}"}]}], "}"}]}], ",", 
               "\n", " ", 
               RowBox[{"StyleKeyMapping", "->", 
                 RowBox[{"{", 
                   RowBox[{"\"Tab\"", " ", "->", " ", "\"Subsection\""}], 
                   "}"}]}], ",", "\n", " ", 
               RowBox[{"CellGroupingRules", "->", 
                 RowBox[{"{", 
                   RowBox[{"\"SectionGrouping\"", ",", " ", "30"}], "}"}]}], 
               ",", "\n", " ", 
               RowBox[{"PageBreakBelow", "->", "False"}], ",", "\n", " ", 
               RowBox[{"CellFrameMargins", "->", "4"}], ",", "\n", " ", 
               RowBox[{"CellFrameColor", "->", 
                 RowBox[{"GrayLevel", "[", "0.7", "]"}]}], ",", "\n", " ", 
               RowBox[{"InputAutoReplacements", "->", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"TeX\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", "\n", "      ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"T\"", ",", " ", "\n", "        ", 
                    RowBox[{"AdjustmentBox", "[", 
                    RowBox[{"\"E\"", ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3"}], ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ",", " ", 
                    
                    RowBox[{"BoxBaselineShift", " ", "->", " ", "0.5"}]}], 
                    "]"}], ",", " ", "\"X\""}], "}"}], "]"}], ",", " ", "\n", 
                    "      ", 
                    
                    RowBox[{"SingleLetterItalics", " ", "->", " ", 
                    "False"}]}], "]"}], ",", " ", "TraditionalForm"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"\"LaTeX\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", "\n", "      ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"L\"", ",", " ", "\n", "        ", 
                    RowBox[{"StyleBox", "[", "\n", "         ", 
                    RowBox[{
                    RowBox[{"AdjustmentBox", "[", 
                    RowBox[{"\"A\"", ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", " ", 
                    RowBox[{"-", "0.3"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ",", " ", 
                    
                    RowBox[{"BoxBaselineShift", " ", "->", " ", 
                    RowBox[{"-", "0.4"}]}]}], "]"}], ",", " ", 
                    
                    RowBox[{"FontSize", " ", "->", " ", "\n", "         ", 
                    "Smaller"}]}], "]"}], ",", " ", "\"T\"", ",", " ", "\n", 
                    "        ", 
                    RowBox[{"AdjustmentBox", "[", 
                    RowBox[{"\"E\"", ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3"}], ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ",", " ", 
                    
                    RowBox[{"BoxBaselineShift", " ", "->", " ", "0.5"}]}], 
                    "]"}], ",", " ", "\"X\""}], "}"}], "]"}], ",", " ", "\n", 
                    "      ", 
                    
                    RowBox[{"SingleLetterItalics", " ", "->", " ", 
                    "False"}]}], "]"}], ",", " ", "TraditionalForm"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"\"mma\"", " ", "->", " ", "\"Mathematica\""}], 
                    ",", " ", 
                    RowBox[{"\"Mma\"", " ", "->", " ", "\"Mathematica\""}], 
                    ",", " ", "\n", "   ", 
                    RowBox[{"\"MMA\"", " ", "->", " ", "\"Mathematica\""}], 
                    ",", " ", 
                    RowBox[{"\"gridMathematica\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"grid\"", ",", " ", "\n", "       ", 
                    RowBox[{"AdjustmentBox", "[", "\n", "        ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", 
                    RowBox[{"\"Mathematica\"", ",", " ", 
                    RowBox[{"FontSlant", " ", "->", " ", "\"Italic\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.175"}], ",", " ", "0"}], "}"}], ",", " ", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}]}], "]"}]}],
                     "}"}], "]"}], ",", " ", "TextForm"}], "]"}]}], ",", " ", 
                    "\n", "   ", 
                    RowBox[{"\"webMathematica\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"web\"", ",", " ", "\n", "       ", 
                    RowBox[{"AdjustmentBox", "[", "\n", "        ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", 
                    RowBox[{"\"Mathematica\"", ",", " ", 
                    RowBox[{"FontSlant", " ", "->", " ", "\"Italic\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.175"}], ",", " ", "0"}], "}"}], ",", " ", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}]}], "]"}]}],
                     "}"}], "]"}], ",", " ", "TextForm"}], "]"}]}], ",", " ", 
                    "\n", "   ", "ParentList"}], "}"}]}], ",", "\n", " ", 
               RowBox[{"LineSpacing", "->", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", " ", "2"}], "}"}]}], ",", "\n", " ", 
               RowBox[{"LanguageCategory", "->", "\"NaturalLanguage\""}], ",",
                "\n", " ", 
               RowBox[{"CounterIncrements", "->", "\"Section\""}], ",", "\n", 
               " ", 
               RowBox[{"CounterAssignments", "->", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Subsection\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"Subsubsection\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"Item\"", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"Subitem\"", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", "\n", "   ", 
                    RowBox[{"\"Subsubitem\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"ItemNumbered\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"SubitemNumbered\"", ",", " ", "0"}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"SubsubitemNumbered\"", ",", " ", "0"}], 
                    "}"}]}], "}"}]}], ",", "\n", " ", 
               RowBox[{"MenuSortingValue", "->", "1250"}], ",", "\n", " ", 
               RowBox[{"MenuCommandKey", "->", "\"4\""}], ",", "\n", " ", 
               RowBox[{"FontFamily", "->", "\"Gill Sans\""}], ",", "\n", " ", 
               
               RowBox[{"FontSize", "->", "28"}], ",", "\n", " ", 
               RowBox[{"FontColor", "->", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.7612268253604944", ",", " ", "0.29576562142366675`", 
                    ",", " ", "0.08555733577477684"}], "]"}]}]}], "]"}]], 
          "Input"], 
         Cell[
          CellGroupData[{
            Cell[
             BoxData[
              RowBox[{"Cell", "[", 
                RowBox[{
                  RowBox[{"StyleData", "[", "\"Section\"", "]"}], ",", "\n", 
                  " ", 
                  RowBox[{"CellFrame", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", "\n",
                   " ", 
                  RowBox[{"CellMargins", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"27", ",", " ", "Inherited"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", " ", "34"}], "}"}]}], "}"}]}], ",", 
                  "\n", " ", 
                  RowBox[{"StyleKeyMapping", "->", 
                    RowBox[{"{", 
                    RowBox[{"\"Tab\"", " ", "->", " ", "\"Subsection\""}], 
                    "}"}]}], ",", "\n", " ", 
                  RowBox[{"CellGroupingRules", "->", 
                    RowBox[{"{", 
                    RowBox[{"\"SectionGrouping\"", ",", " ", "30"}], "}"}]}], 
                  ",", "\n", " ", 
                  RowBox[{"PageBreakBelow", "->", "False"}], ",", "\n", " ", 
                  RowBox[{"CellFrameMargins", "->", "4"}], ",", "\n", " ", 
                  RowBox[{"CellFrameColor", "->", 
                    RowBox[{"GrayLevel", "[", "0.7", "]"}]}], ",", "\n", " ", 
                  
                  RowBox[{"InputAutoReplacements", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"TeX\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", "\n", "      ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"T\"", ",", " ", "\n", "        ", 
                    RowBox[{"AdjustmentBox", "[", 
                    RowBox[{"\"E\"", ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3"}], ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ",", " ", 
                    
                    RowBox[{"BoxBaselineShift", " ", "->", " ", "0.5"}]}], 
                    "]"}], ",", " ", "\"X\""}], "}"}], "]"}], ",", " ", "\n", 
                    "      ", 
                    
                    RowBox[{"SingleLetterItalics", " ", "->", " ", 
                    "False"}]}], "]"}], ",", " ", "TraditionalForm"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"\"LaTeX\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", "\n", "      ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"L\"", ",", " ", "\n", "        ", 
                    RowBox[{"StyleBox", "[", "\n", "         ", 
                    RowBox[{
                    RowBox[{"AdjustmentBox", "[", 
                    RowBox[{"\"A\"", ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", " ", 
                    RowBox[{"-", "0.3"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ",", " ", 
                    
                    RowBox[{"BoxBaselineShift", " ", "->", " ", 
                    RowBox[{"-", "0.4"}]}]}], "]"}], ",", " ", 
                    
                    RowBox[{"FontSize", " ", "->", " ", "\n", "         ", 
                    "Smaller"}]}], "]"}], ",", " ", "\"T\"", ",", " ", "\n", 
                    "        ", 
                    RowBox[{"AdjustmentBox", "[", 
                    RowBox[{"\"E\"", ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3"}], ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ",", " ", 
                    
                    RowBox[{"BoxBaselineShift", " ", "->", " ", "0.5"}]}], 
                    "]"}], ",", " ", "\"X\""}], "}"}], "]"}], ",", " ", "\n", 
                    "      ", 
                    
                    RowBox[{"SingleLetterItalics", " ", "->", " ", 
                    "False"}]}], "]"}], ",", " ", "TraditionalForm"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"\"mma\"", " ", "->", " ", "\"Mathematica\""}], 
                    ",", " ", 
                    RowBox[{"\"Mma\"", " ", "->", " ", "\"Mathematica\""}], 
                    ",", " ", "\n", "   ", 
                    RowBox[{"\"MMA\"", " ", "->", " ", "\"Mathematica\""}], 
                    ",", " ", 
                    RowBox[{"\"gridMathematica\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"grid\"", ",", " ", "\n", "       ", 
                    RowBox[{"AdjustmentBox", "[", "\n", "        ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", 
                    RowBox[{"\"Mathematica\"", ",", " ", 
                    RowBox[{"FontSlant", " ", "->", " ", "\"Italic\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.175"}], ",", " ", "0"}], "}"}], ",", " ", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}]}], "]"}]}],
                     "}"}], "]"}], ",", " ", "TextForm"}], "]"}]}], ",", " ", 
                    "\n", "   ", 
                    RowBox[{"\"webMathematica\"", " ", "->", " ", 
                    RowBox[{"FormBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"web\"", ",", " ", "\n", "       ", 
                    RowBox[{"AdjustmentBox", "[", "\n", "        ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", 
                    RowBox[{"\"Mathematica\"", ",", " ", 
                    RowBox[{"FontSlant", " ", "->", " ", "\"Italic\""}]}], 
                    "]"}], ",", " ", 
                    RowBox[{"BoxMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.175"}], ",", " ", "0"}], "}"}], ",", " ", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}]}], "]"}]}],
                     "}"}], "]"}], ",", " ", "TextForm"}], "]"}]}], ",", " ", 
                    "\n", "   ", "ParentList"}], "}"}]}], ",", "\n", " ", 
                  RowBox[{"LineSpacing", "->", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "2"}], "}"}]}], ",", "\n", " ", 
                  RowBox[{"LanguageCategory", "->", "\"NaturalLanguage\""}], 
                  ",", "\n", " ", 
                  RowBox[{"CounterIncrements", "->", "\"Section\""}], ",", 
                  "\n", " ", 
                  RowBox[{"CounterAssignments", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Subsection\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"Subsubsection\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"Item\"", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"Subitem\"", ",", " ", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", "\n", "   ", 
                    RowBox[{"\"Subsubitem\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"ItemNumbered\"", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"\"SubitemNumbered\"", ",", " ", "0"}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"SubsubitemNumbered\"", ",", " ", "0"}], 
                    "}"}]}], "}"}]}], ",", "\n", " ", 
                  RowBox[{"MenuSortingValue", "->", "1250"}], ",", "\n", " ", 
                  
                  RowBox[{"MenuCommandKey", "->", "\"4\""}], ",", "\n", " ", 
                  RowBox[{"FontFamily", "->", "\"Gill Sans\""}], ",", "\n", 
                  " ", 
                  RowBox[{"FontSize", "->", "28"}], ",", "\n", " ", 
                  RowBox[{"FontColor", "->", 
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7612268253604944", ",", " ", "0.29576562142366675`", 
                    ",", " ", "0.08555733577477684"}], "]"}]}]}], "]"}]], 
             "Input"], 
            Cell[
             RawData[
             "Cell[StyleData[\"Exercise\"],\n ShowGroupOpener->True,\n \
MenuSortingValue->1250,\n FontFamily->\"Comic Sans MS\",\n FontSize->24,\n \
FontWeight->\"Plain\",\n FontSlant->\"Plain\",\n FontColor->RGBColor[0, 0, \
1]]"], ShowGroupOpener -> True, MenuSortingValue -> 1250, FontFamily -> 
             "Comic Sans MS", FontSize -> 24, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> RGBColor[0, 0, 1]]}, Open]]}, 
        Open]], 
      Cell[
       StyleData["Exercise"], CellFrame -> {{0, 0}, {0, 1}}, ShowGroupOpener -> 
       True, CellMargins -> {{27, Inherited}, {8, 34}}, 
       StyleKeyMapping -> {"Tab" -> "Subexercise"}, 
       CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> False, 
       CellFrameMargins -> 4, CellFrameColor -> GrayLevel[0.7], 
       InputAutoReplacements -> {"TeX" -> FormBox[
           StyleBox[
            RowBox[{"T", 
              AdjustmentBox[
              "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 
               0.5], "X"}], SingleLetterItalics -> False], TraditionalForm], 
         "LaTeX" -> FormBox[
           StyleBox[
            RowBox[{"L", 
              StyleBox[
               AdjustmentBox[
               "A", BoxMargins -> {{-0.5, -0.3}, {0, 0}}, 
                BoxBaselineShift -> -0.4], FontSize -> Smaller], "T", 
              AdjustmentBox[
              "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 
               0.5], "X"}], SingleLetterItalics -> False], TraditionalForm], 
         "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
         "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], ParentList}, 
       LineSpacing -> {1, 2}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1250, FontFamily -> "Comic Sans MS", FontSize -> 24, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> RGBColor[0, 0, 1]], 
      Cell[
       StyleData["Subexercise"], ShowGroupOpener -> True, 
       CellMargins -> {{50.34765625, 3.}, {8., 12.}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subsubexercise", "Backspace" -> "Exercise", 
         KeyEvent["Tab", Modifiers -> {Shift}] -> "Exercise"}, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       InputAutoReplacements -> {"TeX" -> FormBox[
           StyleBox[
            RowBox[{"T", 
              AdjustmentBox[
              "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 
               0.5], "X"}], SingleLetterItalics -> False], TraditionalForm], 
         "LaTeX" -> FormBox[
           StyleBox[
            RowBox[{"L", 
              StyleBox[
               AdjustmentBox[
               "A", BoxMargins -> {{-0.5, -0.3}, {0, 0}}, 
                BoxBaselineShift -> -0.4], FontSize -> Smaller], "T", 
              AdjustmentBox[
              "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 
               0.5], "X"}], SingleLetterItalics -> False], TraditionalForm], 
         "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
         "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], ParentList}, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1300, FontFamily -> "Comic Sans MS", FontSize -> 18, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> RGBColor[0, 0, 1]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubexercise"], ShowGroupOpener -> True, 
          CellMargins -> {{66, Inherited}, {2, 10}}, 
          StyleKeyMapping -> {
           "Backspace" -> "Subexercise", 
            KeyEvent["Tab", Modifiers -> {Shift}] -> "Subexercise"}, 
          CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
          False, InputAutoReplacements -> {"TeX" -> FormBox[
              StyleBox[
               RowBox[{"T", 
                 AdjustmentBox[
                 "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 
                  0.5], "X"}], SingleLetterItalics -> False], 
              TraditionalForm], "LaTeX" -> FormBox[
              StyleBox[
               RowBox[{"L", 
                 StyleBox[
                  AdjustmentBox[
                  "A", BoxMargins -> {{-0.5, -0.3}, {0, 0}}, 
                   BoxBaselineShift -> -0.4], FontSize -> Smaller], "T", 
                 AdjustmentBox[
                 "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 
                  0.5], "X"}], SingleLetterItalics -> False], 
              TraditionalForm], "mma" -> "Mathematica", "Mma" -> 
            "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            ParentList}, LanguageCategory -> "NaturalLanguage", 
          CounterIncrements -> "Subsubsection", 
          CounterAssignments -> {{"Subsubsubsection", 0}, {"Item", 0}, {
            "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
            "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, 
          MenuSortingValue -> 1350, FontFamily -> "Comic Sans MS", FontSize -> 
          16, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          RGBColor[0, 0, 1]], 
         Cell[
          StyleData["Subsubsection", "Presentation"], 
          CellMargins -> {{100, Inherited}, {3, 15}}, LineSpacing -> {1, 6}, 
          FontFamily -> "Comic Sans MS", FontSize -> 16, FontSlant -> 
          "Plain"], 
         Cell[
          StyleData["Subsubsection", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {3, 15}}, 
          LineSpacing -> {1, 2}, FontFamily -> "Comic Sans MS", FontSize -> 
          16, FontSlant -> "Plain"], 
         Cell[
          StyleData["Subsubsection", "Condensed"], 
          CellMargins -> {{18, Inherited}, {6, 12}}, FontFamily -> 
          "Comic Sans MS", FontSize -> 16, FontSlant -> "Plain"], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{49, Inherited}, {6, 16}}, FontFamily -> 
          "Comic Sans MS", FontSize -> 16, FontSlant -> "Plain"], 
         Cell[
          StyleData["Subsubsection", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {6, 16}}, FontFamily -> 
          "Comic Sans MS", FontSize -> 16, FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.3]]}, Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Text", "Section"], 
      Cell[
       StyleData["Text"], PageWidth -> PaperWidth, 
       CellMargins -> {{48, Inherited}, {8, 12}}, FontFamily -> "Helvetica", 
       FontSize -> 16, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9, FontColor -> GrayLevel[0.9]], 
         Cell[
          StyleData["CellLabel", "Presentation"], FontSize -> 12], 
         Cell[
          StyleData["CellLabel", "Condensed"], FontSize -> 9], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 1, FontColor -> 
          GrayLevel[1]]}, Closed]], 
      Cell[
       StyleData["Input"], CellFrame -> {{2, 0}, {0, 0}}, Background -> 
       GrayLevel[0.95]], 
      Cell[
       StyleData["Output"], FontSize -> 10], 
      Cell[
       CellGroupData[{
         Cell["Hyperlinks", "Subsection"], 
         Cell[
         "The following styles are for linking automatically to the new \
on-line help system.", "Text", FontVariations -> {"Underline" -> True}], 
         Cell[
          StyleData["FunctionLink", StyleDefinitions -> StyleData["Link"]], 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0., 0.17250324254215305`, 0.7137407492179751], Background -> 
          None], 
         Cell[
          StyleData["GuideLink", StyleDefinitions -> StyleData["Link"]], 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0., 0.17250324254215305`, 0.7137407492179751], Background -> 
          None], 
         Cell[
          StyleData["TutorialLink", StyleDefinitions -> StyleData["Link"]], 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0., 0.17250324254215305`, 0.7137407492179751], Background -> 
          None], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Link"], ContextMenu -> 
             FEPrivate`FrontEndResource["ContextMenus", "PacletLink"], 
             StyleMenuListing -> None, ButtonStyleMenuListing -> Automatic, 
             FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
             FontTracking -> "Plain", 
             FontVariations -> {
              "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
               "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0.17250324254215305`, 0.7137407492179751], 
             Background -> None, 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonExpandable -> False, 
               ButtonFunction :> (FEPrivate`FrontEndExecute[
                 FrontEndToken["OpenHelpLink", {#, 
                   FEPrivate`If[
                    CurrentValue["ShiftKey"], Null, 
                    FEPrivate`ButtonNotebook[]]}]]& ), ButtonNote -> 
               ButtonData, Evaluator -> None, ImageSize -> Full, Method -> 
               "Preemptive"}], 
            Cell[
             StyleData["Link", "Presentation"]], 
            Cell[
             StyleData["Link", "Printout"]]}, Closed]], 
         Cell[
          StyleData["GenericLink", StyleDefinitions -> StyleData["Link"]], 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0., 0.17250324254215305`, 0.7137407492179751], Background -> 
          None, ButtonBoxOptions -> {ButtonFunction :> (NotebookLocate[{
               Documentation`ResolveLink[#], None}]& ), Evaluator -> 
            Automatic}], 
         Cell[
          StyleData["MessageLink", StyleDefinitions -> StyleData["Link"]], 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontTracking -> "Plain", 
          FontVariations -> {
           "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
            "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
          RGBColor[0., 0.17250324254215305`, 0.7137407492179751], Background -> 
          None, ButtonBoxOptions -> {BaselinePosition -> Baseline}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
             ContextMenu -> 
             FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"], 
             FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
             FontTracking -> "Plain", 
             FontVariations -> {
              "Masked" -> False, "Outline" -> False, "Shadow" -> False, 
               "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0., 0.17250324254215305`, 0.7137407492179751], 
             Background -> None, 
             ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
                  
                  NotebookLocate[#2, "OpenInNewWindow" -> 
                   CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> 
               None, Method -> "Queued"}], 
            Cell[
             StyleData["Hyperlink", "Condensed"]]}, Closed]]}, Open]]}, 
     Open]]}, Visible -> False, FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 179, 3, 62, "Input"],
Cell[CellGroupData[{
Cell[604, 20, 161, 3, 92, "Title"],
Cell[CellGroupData[{
Cell[790, 27, 96, 1, 76, "Section"],
Cell[889, 30, 231, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[1145, 37, 220, 4, 44, "Input"],
Cell[1368, 43, 793, 26, 29, "Output"]
}, Open  ]],
Cell[2176, 72, 53, 0, 37, "Text"],
Cell[CellGroupData[{
Cell[2254, 76, 161, 3, 44, "Input"],
Cell[2418, 81, 793, 26, 29, "Output"]
}, Open  ]],
Cell[3226, 110, 405, 13, 58, "Text"],
Cell[CellGroupData[{
Cell[3656, 127, 96, 2, 44, "Input"],
Cell[3755, 131, 801, 27, 27, "Output"]
}, Open  ]],
Cell[4571, 161, 141, 3, 57, "Text"],
Cell[4715, 166, 186, 4, 77, "Text"],
Cell[CellGroupData[{
Cell[4926, 174, 173, 3, 44, "Input"],
Cell[5102, 179, 795, 26, 30, "Output"]
}, Open  ]],
Cell[5912, 208, 138, 3, 57, "Text"],
Cell[CellGroupData[{
Cell[6075, 215, 73, 1, 44, "Input"],
Cell[6151, 218, 459, 15, 27, "Output"]
}, Open  ]],
Cell[6625, 236, 622, 17, 77, "Text"],
Cell[CellGroupData[{
Cell[7272, 257, 226, 3, 79, "Input"],
Cell[7501, 262, 793, 26, 29, "Output"],
Cell[8297, 290, 793, 26, 29, "Output"],
Cell[9093, 318, 797, 26, 29, "Output"]
}, Open  ]],
Cell[9905, 347, 456, 12, 98, "Text"],
Cell[CellGroupData[{
Cell[10386, 363, 809, 26, 51, "Input"],
Cell[11198, 391, 271, 9, 27, "Output"]
}, Open  ]],
Cell[11484, 403, 261, 7, 57, "Text"],
Cell[CellGroupData[{
Cell[11770, 414, 265, 7, 72, "Input"],
Cell[12038, 423, 436, 15, 27, "Output"]
}, Open  ]],
Cell[12489, 441, 362, 6, 77, "Text"],
Cell[12854, 449, 74409, 1225, 309, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[87288, 1678, 184, 4, 35, "Subsubexercise"],
Cell[87475, 1684, 130, 3, 44, "Input",
 Evaluatable->False],
Cell[87608, 1689, 269, 5, 77, "Text"],
Cell[87880, 1696, 44385, 733, 189, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[132302, 2434, 166, 3, 35, "Subsubexercise"],
Cell[132471, 2439, 771, 26, 47, "Input",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133291, 2471, 94, 1, 76, "Section"],
Cell[133388, 2474, 345, 9, 37, "Text"],
Cell[CellGroupData[{
Cell[133758, 2487, 849, 22, 44, "Input"],
Cell[134610, 2511, 4904, 149, 39, "Output"]
}, Open  ]],
Cell[139529, 2663, 265, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[139819, 2675, 718, 20, 44, "Input"],
Cell[140540, 2697, 4862, 148, 39, "Output"]
}, Open  ]],
Cell[145417, 2848, 581, 10, 137, "Text"],
Cell[CellGroupData[{
Cell[146023, 2862, 829, 21, 44, "Input"],
Cell[146855, 2885, 4862, 148, 39, "Output"]
}, Open  ]],
Cell[151732, 3036, 634, 11, 97, "Text"],
Cell[CellGroupData[{
Cell[152391, 3051, 373, 8, 79, "Input"],
Cell[152767, 3061, 4886, 148, 40, "Output"],
Cell[157656, 3211, 4886, 148, 40, "Output"],
Cell[162545, 3361, 4862, 148, 39, "Output"]
}, Open  ]],
Cell[167422, 3512, 133, 3, 57, "Text"],
Cell[CellGroupData[{
Cell[167580, 3519, 264, 7, 44, "Input"],
Cell[167847, 3528, 1551, 49, 39, "Output"]
}, Open  ]],
Cell[169413, 3580, 110, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[169548, 3587, 88, 1, 44, "Input"],
Cell[169639, 3590, 1551, 49, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171227, 3644, 312, 6, 35, "Subsubexercise"],
Cell[171542, 3652, 194, 4, 44, "Input",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171785, 3662, 25, 0, 76, "Section"],
Cell[171813, 3664, 236, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[172074, 3675, 133, 2, 44, "Input"],
Cell[172210, 3679, 803, 26, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173062, 3711, 94, 1, 76, "Section"],
Cell[CellGroupData[{
Cell[173181, 3716, 116, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[173322, 3721, 132, 2, 44, "Input"],
Cell[173457, 3725, 440, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173934, 3745, 76, 1, 44, "Input"],
Cell[174013, 3748, 440, 15, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174502, 3769, 107, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[174634, 3774, 165, 3, 44, "Input"],
Cell[174802, 3779, 476, 15, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175315, 3799, 104, 2, 44, "Input"],
Cell[175422, 3803, 476, 15, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175935, 3823, 168, 3, 44, "Input"],
Cell[176106, 3828, 476, 15, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176631, 3849, 124, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[176780, 3854, 173, 3, 44, "Input"],
Cell[176956, 3859, 753, 25, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177758, 3890, 113, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[177896, 3895, 240, 4, 44, "Input"],
Cell[178139, 3901, 754, 25, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178930, 3931, 223, 4, 44, "Input"],
Cell[179156, 3937, 760, 25, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179953, 3967, 818, 26, 62, "Input"],
Cell[180774, 3995, 234, 8, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181069, 4010, 154, 2, 76, "Section"],
Cell[181226, 4014, 869, 31, 57, "Text"],
Cell[CellGroupData[{
Cell[182120, 4049, 2969, 93, 124, "Input"],
Cell[185092, 4144, 39, 0, 27, "Output"],
Cell[185134, 4146, 41, 0, 28, "Output"],
Cell[185178, 4148, 38, 0, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185253, 4153, 5639, 169, 143, "Input"],
Cell[190895, 4324, 31, 0, 27, "Output"],
Cell[190929, 4326, 36, 0, 27, "Output"],
Cell[190968, 4328, 114, 3, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191131, 4337, 41, 0, 76, "Section"],
Cell[191175, 4339, 238, 6, 57, "Text"],
Cell[CellGroupData[{
Cell[191438, 4349, 488, 16, 61, "Input"],
Cell[191929, 4367, 43, 0, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192009, 4372, 2354, 69, 65, "Input"],
Cell[194366, 4443, 91, 1, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194506, 4450, 38, 0, 76, "Section"],
Cell[CellGroupData[{
Cell[194569, 4454, 29, 0, 44, "Subsection"],
Cell[CellGroupData[{
Cell[194623, 4458, 219, 6, 44, "Input"],
Cell[194845, 4466, 478, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195360, 4483, 499, 14, 79, "Input"],
Cell[195862, 4499, 1336, 39, 50, "Output"],
Cell[197201, 4540, 1331, 38, 45, "Output"],
Cell[198535, 4580, 1382, 38, 42, "Output"]
}, Open  ]],
Cell[199932, 4621, 98, 2, 57, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200067, 4628, 51, 0, 44, "Subsection"],
Cell[CellGroupData[{
Cell[200143, 4632, 69, 1, 44, "Input"],
Cell[200215, 4635, 285, 11, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200537, 4651, 71, 1, 44, "Input"],
Cell[200611, 4654, 288, 11, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200936, 4670, 175, 4, 44, "Input"],
Cell[201114, 4676, 918, 33, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202069, 4714, 184, 4, 44, "Input"],
Cell[202256, 4720, 937, 33, 49, "Output"]
}, Open  ]],
Cell[203208, 4756, 8392, 265, 112, "Input"],
Cell[CellGroupData[{
Cell[211625, 5025, 67, 1, 44, "Input"],
Cell[211695, 5028, 8681, 272, 315, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220425, 5306, 95, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[220545, 5311, 259, 6, 44, "Input"],
Cell[220807, 5319, 1256, 39, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222100, 5363, 130, 2, 44, "Input"],
Cell[222233, 5367, 86, 1, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222380, 5375, 30, 0, 81, "Exercise"],
Cell[222413, 5377, 109, 2, 46, "Subexercise"],
Cell[222525, 5381, 83, 1, 38, "Subexercise"]
}, Open  ]]
}, Open  ]]
}
]
*)

